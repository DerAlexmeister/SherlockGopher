// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.20.1-devel
// 	protoc        v3.14.0
// source: analysertowebserver.proto

package analysertowebserver

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//
//AnalyserStateEnum represents the possible states of the analyser
type AnalyserStateEnum int32

const (
	AnalyserStateEnum_Stop    AnalyserStateEnum = 0
	AnalyserStateEnum_Pause   AnalyserStateEnum = 1
	AnalyserStateEnum_Running AnalyserStateEnum = 2
	AnalyserStateEnum_Clean   AnalyserStateEnum = 3
	AnalyserStateEnum_Idle    AnalyserStateEnum = 4
)

// Enum value maps for AnalyserStateEnum.
var (
	AnalyserStateEnum_name = map[int32]string{
		0: "Stop",
		1: "Pause",
		2: "Running",
		3: "Clean",
		4: "Idle",
	}
	AnalyserStateEnum_value = map[string]int32{
		"Stop":    0,
		"Pause":   1,
		"Running": 2,
		"Clean":   3,
		"Idle":    4,
	}
)

func (x AnalyserStateEnum) Enum() *AnalyserStateEnum {
	p := new(AnalyserStateEnum)
	*p = x
	return p
}

func (x AnalyserStateEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AnalyserStateEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_analysertowebserver_proto_enumTypes[0].Descriptor()
}

func (AnalyserStateEnum) Type() protoreflect.EnumType {
	return &file_analysertowebserver_proto_enumTypes[0]
}

func (x AnalyserStateEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AnalyserStateEnum.Descriptor instead.
func (AnalyserStateEnum) EnumDescriptor() ([]byte, []int) {
	return file_analysertowebserver_proto_rawDescGZIP(), []int{0}
}

//
//WorkloadRequest requests the status of the queue
type WorkloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WorkloadRequest) Reset() {
	*x = WorkloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analysertowebserver_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadRequest) ProtoMessage() {}

func (x *WorkloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analysertowebserver_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadRequest.ProtoReflect.Descriptor instead.
func (*WorkloadRequest) Descriptor() ([]byte, []int) {
	return file_analysertowebserver_proto_rawDescGZIP(), []int{0}
}

//
//WorkloadResponse returns for each task state the amount of tasks in it
type WorkloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CrawledWebsite string `protobuf:"bytes,1,opt,name=crawledWebsite,proto3" json:"crawledWebsite,omitempty"`
	Undone         uint64 `protobuf:"varint,2,opt,name=undone,proto3" json:"undone,omitempty"`
	Processing     uint64 `protobuf:"varint,3,opt,name=processing,proto3" json:"processing,omitempty"`
	CrawlerError   uint64 `protobuf:"varint,4,opt,name=crawlerError,proto3" json:"crawlerError,omitempty"`
	Saving         uint64 `protobuf:"varint,5,opt,name=saving,proto3" json:"saving,omitempty"`
	SendToCrawler  uint64 `protobuf:"varint,6,opt,name=sendToCrawler,proto3" json:"sendToCrawler,omitempty"`
	Finished       uint64 `protobuf:"varint,7,opt,name=finished,proto3" json:"finished,omitempty"`
}

func (x *WorkloadResponse) Reset() {
	*x = WorkloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analysertowebserver_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadResponse) ProtoMessage() {}

func (x *WorkloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analysertowebserver_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadResponse.ProtoReflect.Descriptor instead.
func (*WorkloadResponse) Descriptor() ([]byte, []int) {
	return file_analysertowebserver_proto_rawDescGZIP(), []int{1}
}

func (x *WorkloadResponse) GetCrawledWebsite() string {
	if x != nil {
		return x.CrawledWebsite
	}
	return ""
}

func (x *WorkloadResponse) GetUndone() uint64 {
	if x != nil {
		return x.Undone
	}
	return 0
}

func (x *WorkloadResponse) GetProcessing() uint64 {
	if x != nil {
		return x.Processing
	}
	return 0
}

func (x *WorkloadResponse) GetCrawlerError() uint64 {
	if x != nil {
		return x.CrawlerError
	}
	return 0
}

func (x *WorkloadResponse) GetSaving() uint64 {
	if x != nil {
		return x.Saving
	}
	return 0
}

func (x *WorkloadResponse) GetSendToCrawler() uint64 {
	if x != nil {
		return x.SendToCrawler
	}
	return 0
}

func (x *WorkloadResponse) GetFinished() uint64 {
	if x != nil {
		return x.Finished
	}
	return 0
}

//
//ChangeStateRequest requests the analyser to change his state.
type ChangeStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State AnalyserStateEnum `protobuf:"varint,1,opt,name=state,proto3,enum=analysertowebserver.AnalyserStateEnum" json:"state,omitempty"`
}

func (x *ChangeStateRequest) Reset() {
	*x = ChangeStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analysertowebserver_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeStateRequest) ProtoMessage() {}

func (x *ChangeStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analysertowebserver_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeStateRequest.ProtoReflect.Descriptor instead.
func (*ChangeStateRequest) Descriptor() ([]byte, []int) {
	return file_analysertowebserver_proto_rawDescGZIP(), []int{2}
}

func (x *ChangeStateRequest) GetState() AnalyserStateEnum {
	if x != nil {
		return x.State
	}
	return AnalyserStateEnum_Stop
}

//
//ChangeStateResponse returns true if the status was successfully set.
type ChangeStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ChangeStateResponse) Reset() {
	*x = ChangeStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analysertowebserver_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeStateResponse) ProtoMessage() {}

func (x *ChangeStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analysertowebserver_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeStateResponse.ProtoReflect.Descriptor instead.
func (*ChangeStateResponse) Descriptor() ([]byte, []int) {
	return file_analysertowebserver_proto_rawDescGZIP(), []int{3}
}

func (x *ChangeStateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

//
//StateRequest requests the current state of the analyser.
type StateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StateRequest) Reset() {
	*x = StateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analysertowebserver_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateRequest) ProtoMessage() {}

func (x *StateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analysertowebserver_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateRequest.ProtoReflect.Descriptor instead.
func (*StateRequest) Descriptor() ([]byte, []int) {
	return file_analysertowebserver_proto_rawDescGZIP(), []int{4}
}

//
//StateResponse returns the current state of the analyser.
type StateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State AnalyserStateEnum `protobuf:"varint,1,opt,name=state,proto3,enum=analysertowebserver.AnalyserStateEnum" json:"state,omitempty"`
}

func (x *StateResponse) Reset() {
	*x = StateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analysertowebserver_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateResponse) ProtoMessage() {}

func (x *StateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analysertowebserver_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateResponse.ProtoReflect.Descriptor instead.
func (*StateResponse) Descriptor() ([]byte, []int) {
	return file_analysertowebserver_proto_rawDescGZIP(), []int{5}
}

func (x *StateResponse) GetState() AnalyserStateEnum {
	if x != nil {
		return x.State
	}
	return AnalyserStateEnum_Stop
}

var File_analysertowebserver_proto protoreflect.FileDescriptor

var file_analysertowebserver_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x77, 0x65, 0x62, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x77, 0x65, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x22, 0x11, 0x0a, 0x0f, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0xf0, 0x01, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x72, 0x61, 0x77,
	0x6c, 0x65, 0x64, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x64, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x75, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x61, 0x77,
	0x6c, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x61,
	0x76, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x43, 0x72,
	0x61, 0x77, 0x6c, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x65, 0x6e,
	0x64, 0x54, 0x6f, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x22, 0x52, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x77, 0x65, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x75, 0x6d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x2f, 0x0a, 0x13, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x0e, 0x0a, 0x0c, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x0d, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x77, 0x65, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x75, 0x6d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2a, 0x4a, 0x0a, 0x11, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12,
	0x08, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x61, 0x75,
	0x73, 0x65, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x10,
	0x02, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04,
	0x49, 0x64, 0x6c, 0x65, 0x10, 0x04, 0x32, 0xa4, 0x02, 0x0a, 0x08, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x65, 0x72, 0x12, 0x5c, 0x0a, 0x0b, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x50, 0x43, 0x12, 0x24, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x77,
	0x65, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x65, 0x72, 0x74, 0x6f, 0x77, 0x65, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x65, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x50, 0x43, 0x12, 0x27, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x65, 0x72, 0x74, 0x6f,
	0x77, 0x65, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x77, 0x65, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x50, 0x43, 0x12, 0x21, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x65, 0x72, 0x74,
	0x6f, 0x77, 0x65, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x65, 0x72, 0x74, 0x6f, 0x77, 0x65, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_analysertowebserver_proto_rawDescOnce sync.Once
	file_analysertowebserver_proto_rawDescData = file_analysertowebserver_proto_rawDesc
)

func file_analysertowebserver_proto_rawDescGZIP() []byte {
	file_analysertowebserver_proto_rawDescOnce.Do(func() {
		file_analysertowebserver_proto_rawDescData = protoimpl.X.CompressGZIP(file_analysertowebserver_proto_rawDescData)
	})
	return file_analysertowebserver_proto_rawDescData
}

var file_analysertowebserver_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_analysertowebserver_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_analysertowebserver_proto_goTypes = []interface{}{
	(AnalyserStateEnum)(0),      // 0: analysertowebserver.AnalyserStateEnum
	(*WorkloadRequest)(nil),     // 1: analysertowebserver.WorkloadRequest
	(*WorkloadResponse)(nil),    // 2: analysertowebserver.WorkloadResponse
	(*ChangeStateRequest)(nil),  // 3: analysertowebserver.ChangeStateRequest
	(*ChangeStateResponse)(nil), // 4: analysertowebserver.ChangeStateResponse
	(*StateRequest)(nil),        // 5: analysertowebserver.StateRequest
	(*StateResponse)(nil),       // 6: analysertowebserver.StateResponse
}
var file_analysertowebserver_proto_depIdxs = []int32{
	0, // 0: analysertowebserver.ChangeStateRequest.state:type_name -> analysertowebserver.AnalyserStateEnum
	0, // 1: analysertowebserver.StateResponse.state:type_name -> analysertowebserver.AnalyserStateEnum
	1, // 2: analysertowebserver.Analyser.WorkloadRPC:input_type -> analysertowebserver.WorkloadRequest
	3, // 3: analysertowebserver.Analyser.ChangeStateRPC:input_type -> analysertowebserver.ChangeStateRequest
	5, // 4: analysertowebserver.Analyser.StateRPC:input_type -> analysertowebserver.StateRequest
	2, // 5: analysertowebserver.Analyser.WorkloadRPC:output_type -> analysertowebserver.WorkloadResponse
	4, // 6: analysertowebserver.Analyser.ChangeStateRPC:output_type -> analysertowebserver.ChangeStateResponse
	6, // 7: analysertowebserver.Analyser.StateRPC:output_type -> analysertowebserver.StateResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_analysertowebserver_proto_init() }
func file_analysertowebserver_proto_init() {
	if File_analysertowebserver_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_analysertowebserver_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analysertowebserver_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analysertowebserver_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analysertowebserver_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analysertowebserver_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analysertowebserver_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_analysertowebserver_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_analysertowebserver_proto_goTypes,
		DependencyIndexes: file_analysertowebserver_proto_depIdxs,
		EnumInfos:         file_analysertowebserver_proto_enumTypes,
		MessageInfos:      file_analysertowebserver_proto_msgTypes,
	}.Build()
	File_analysertowebserver_proto = out.File
	file_analysertowebserver_proto_rawDesc = nil
	file_analysertowebserver_proto_goTypes = nil
	file_analysertowebserver_proto_depIdxs = nil
}
