<!DOCTYPE html>  <html lang="en-GB" class="no-js b-reith-sans-font b-reith-serif-font"><head>    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/><script type="text/javascript">      var _sf_startpt = (new Date()).getTime();    </script><meta content="text/html; charset=UTF-8" http-equiv="Content-Type"><meta content="The best of the BBC, with the latest news and sport headlines, weather, TV &amp; radio highlights and much more from across the whole of BBC Online" name="description"><meta content="BBC, British Broadcasting Corporation, BBCi, News, Sport, iPlayer, TV, Radio, Food, Music, Business, Arts, Bitesize, Lifestyle, Entertainment, Headlines" name="keywords"><meta property="og:title" content="BBC - Home"><meta property="og:type" content="website"><meta property="og:description" content="The best of the BBC, with the latest news and sport headlines, weather, TV &amp; radio highlights and much more from across the whole of BBC Online"><meta property="og:site_name" content="BBC Homepage"><meta property="og:locale" content="en_GB"><meta property="article:author" content="https://www.facebook.com/bbc"><meta property="og:article:section" content="Home"><meta property="og:url" content="http://www.bbc.co.uk"><meta property="og:image" content="//homepage.files.bbci.co.uk/homepage-v5/d41d8cd98f00b204e9800998ecf8427e/images/bbc_homepage.png"><meta name="twitter:card" content="summary_large_image"><meta name="twitter:site" content="@bbccouk"><meta name="twitter:title" content="BBC - Home"><meta name="twitter:description" content="The best of the BBC, with the latest news and sport headlines, weather, TV &amp; radio highlights and much more from across the whole of BBC Online"><meta name="twitter:creator" content="@bbccouk"><meta name="twitter:image:src" content="//homepage.files.bbci.co.uk/homepage-v5/d41d8cd98f00b204e9800998ecf8427e/images/bbc_homepage.png"><meta name="twitter:image:alt" content="BBC Homepage"><meta name="twitter:domain" content="www.bbc.co.uk"><link rel="canonical" href="https://www.bbc.co.uk" /><script type="text/javascript">(function () {if (window.location.pathname === '/') { window.bbcredirection = { geo: true }; }})();</script><meta name="viewport" content="width=device-width, initial-scale=1.0"><meta property="fb:admins" content="100004154058350"><link rel="stylesheet" href="https://nav.files.bbci.co.uk/orbit/1b2e292884201dd13064a9204e177864/css/orb-ltr.min.css">    <link rel="stylesheet" href="https://nav.files.bbci.co.uk/orbit/1b2e292884201dd13064a9204e177864/css/orb-ie-ltr.min.css">    <script type="text/javascript">/*<![CDATA[*/        window.orb = {            lang: 'en',            bbcBaseUrl: 'https://www.bbc.co.uk',            bbcUrlPrefix: 'https://www.',            staticHost: 'https://nav.files.bbci.co.uk/orbit/1b2e292884201dd13064a9204e177864',            figUrl: 'https://fig.bbc.co.uk/frameworks/fig/2/fig.js',            partialCookieOvenUrl: 'https://cookie-oven.api.bbc'        };        document.documentElement.className += (document.documentElement.className? ' ' : '') + 'orb-js';        window.orb.worldwideNavlinks = '<li class="orb-nav-homedotcom"><a href="https://www.bbc.com/">Home</a></li><li class="orb-nav-newsdotcom"><a href="https://www.bbc.com/news">News</a></li><li class="orb-nav-sport"><a href="https://www.bbc.com/sport">Sport</a></li><li class="orb-nav-reeldotcom"><a href="https://www.bbc.com/reel">Reel</a></li><li class="orb-nav-worklife"><a href="https://www.bbc.com/worklife">Worklife</a></li><li class="orb-nav-traveldotcom"><a href="https://www.bbc.com/travel">Travel</a></li><li class="orb-nav-future"><a href="https://www.bbc.com/future">Future</a></li><li class="orb-nav-culture"><a href="https://www.bbc.com/culture">Culture</a></li><li class="orb-nav-music"><a href="https://www.bbc.com/culture/music">Music</a></li><li class="orb-nav-tv"><a href="https://www.bbc.co.uk/schedules/p00fzl9m">TV</a></li><li class="orb-nav-weather"><a href="https://www.bbc.com/weather">Weather</a></li><li class="orb-nav-sounds"><a href="https://www.bbc.co.uk/sounds">Sounds</a></li>';     /*]]>*/</script><script>// Promise polyfill from https://github.com/bramstein/promis        (function(){'use strict';var f,g=[];function l(a){g.push(a);1==g.length&&f()}function m(){for(;g.length;)g[0](),g.shift()}f=function(){setTimeout(m)};function n(a){this.a=p;this.b=void 0;this.f=[];var b=this;try{a(function(a){q(b,a)},function(a){r(b,a)})}catch(c){r(b,c)}}var p=2;function t(a){return new n(function(b,c){c(a)})}function u(a){return new n(function(b){b(a)})}function q(a,b){if(a.a==p){if(b==a)throw new TypeError;var c=!1;try{var d=b&&b.then;if(null!=b&&"object"==typeof b&&"function"==typeof d){d.call(b,function(b){c||q(a,b);c=!0},function(b){c||r(a,b);c=!0});return}}catch(e){c||r(a,e);return}a.a=0;a.b=b;v(a)}} function r(a,b){if(a.a==p){if(b==a)throw new TypeError;a.a=1;a.b=b;v(a)}}function v(a){l(function(){if(a.a!=p)for(;a.f.length;){var b=a.f.shift(),c=b[0],d=b[1],e=b[2],b=b[3];try{0==a.a?"function"==typeof c?e(c.call(void 0,a.b)):e(a.b):1==a.a&&("function"==typeof d?e(d.call(void 0,a.b)):b(a.b))}catch(h){b(h)}}})}n.prototype.g=function(a){return this.c(void 0,a)};n.prototype.c=function(a,b){var c=this;return new n(function(d,e){c.f.push([a,b,d,e]);v(c)})}; function w(a){return new n(function(b,c){function d(c){return function(d){h[c]=d;e+=1;e==a.length&&b(h)}}var e=0,h=[];0==a.length&&b(h);for(var k=0;k<a.length;k+=1)u(a[k]).c(d(k),c)})}function x(a){return new n(function(b,c){for(var d=0;d<a.length;d+=1)u(a[d]).c(b,c)})};window.Promise||(window.Promise=n,window.Promise.resolve=u,window.Promise.reject=t,window.Promise.race=x,window.Promise.all=w,window.Promise.prototype.then=n.prototype.c,window.Promise.prototype["catch"]=n.prototype.g);}());                // Polyfill Event constructor for IE ref: https://jira.dev.bbc.co.uk/browse/ORBITEN-919        // see: https://stackoverflow.com/questions/26596123        (function () {          if (typeof window.CustomEvent === "function") {            return false;          }          function CustomEvent(event, params) {            params = params || { bubbles: false, cancelable: false, detail: undefined };            var evt = document.createEvent('CustomEvent');            evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);            return evt;          }          CustomEvent.prototype = window.Event.prototype;          window.Event = CustomEvent;        })();                //Element.prototype.matches polyfill        //from https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill        if (!Element.prototype.matches) {          Element.prototype.matches = Element.prototype.msMatchesSelector ||                                      Element.prototype.webkitMatchesSelector;        }        //NodeList.forEach Polyfill        //from https://developer.mozilla.org/en-US/docs/Web/API/NodeList/forEach#Polyfill        if (window.NodeList && !NodeList.prototype.forEach) {          NodeList.prototype.forEach = Array.prototype.forEach;        }            // Object.assign polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Polyfill        if (typeof Object.assign != 'function') {          // Must be writable: true, enumerable: false, configurable: true          Object.defineProperty(Object, "assign", {            value: function assign(target, varArgs) { // .length of function is 2              'use strict';              if (target == null) { // TypeError if undefined or null                throw new TypeError('Cannot convert undefined or null to object');              }                  var to = Object(target);                  for (var index = 1; index < arguments.length; index++) {                var nextSource = arguments[index];                    if (nextSource != null) { // Skip over if undefined or null                  for (var nextKey in nextSource) {                    // Avoid bugs when hasOwnProperty is shadowed                    if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {                      to[nextKey] = nextSource[nextKey];                    }                  }                }              }              return to;            },            writable: true,            configurable: true          });        }            // window.fetch polyfill https://github.com/github/fetch/blob/v0.11.0/fetch.js - chosen for IE9 compatibility        if(typeof window.fetch !== 'function') {          (function(self){"use strict";if(self.fetch){return}function normalizeName(name){if(typeof name!=="string"){name=String(name)}if(/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)){throw new TypeError("Invalid character in header field name")}return name.toLowerCase()}function normalizeValue(value){if(typeof value!=="string"){value=String(value)}return value}function Headers(headers){this.map={};if(headers instanceof Headers){headers.forEach(function(value,name){this.append(name,value)},this)}else if(headers){Object.getOwnPropertyNames(headers).forEach(function(name){this.append(name,headers[name])},this)}}Headers.prototype.append=function(name,value){name=normalizeName(name);value=normalizeValue(value);var list=this.map[name];if(!list){list=[];this.map[name]=list}list.push(value)};Headers.prototype["delete"]=function(name){delete this.map[normalizeName(name)]};Headers.prototype.get=function(name){var values=this.map[normalizeName(name)];return values?values[0]:null};Headers.prototype.getAll=function(name){return this.map[normalizeName(name)]||[]};Headers.prototype.has=function(name){return this.map.hasOwnProperty(normalizeName(name))};Headers.prototype.set=function(name,value){this.map[normalizeName(name)]=[normalizeValue(value)]};Headers.prototype.forEach=function(callback,thisArg){Object.getOwnPropertyNames(this.map).forEach(function(name){this.map[name].forEach(function(value){callback.call(thisArg,value,name,this)},this)},this)};function consumed(body){if(body.bodyUsed){return Promise.reject(new TypeError("Already read"))}body.bodyUsed=true}function fileReaderReady(reader){return new Promise(function(resolve,reject){reader.onload=function(){resolve(reader.result)};reader.onerror=function(){reject(reader.error)}})}function readBlobAsArrayBuffer(blob){var reader=new FileReader;reader.readAsArrayBuffer(blob);return fileReaderReady(reader)}function readBlobAsText(blob){var reader=new FileReader;reader.readAsText(blob);return fileReaderReady(reader)}var support={blob:"FileReader"in self&&"Blob"in self&&function(){try{new Blob;return true}catch(e){return false}}(),formData:"FormData"in self,arrayBuffer:"ArrayBuffer"in self};function Body(){this.bodyUsed=false;this._initBody=function(body){this._bodyInit=body;if(typeof body==="string"){this._bodyText=body}else if(support.blob&&Blob.prototype.isPrototypeOf(body)){this._bodyBlob=body}else if(support.formData&&FormData.prototype.isPrototypeOf(body)){this._bodyFormData=body}else if(!body){this._bodyText=""}else if(support.arrayBuffer&&ArrayBuffer.prototype.isPrototypeOf(body)){}else{throw new Error("unsupported BodyInit type")}if(!this.headers.get("content-type")){if(typeof body==="string"){this.headers.set("content-type","text/plain;charset=UTF-8")}else if(this._bodyBlob&&this._bodyBlob.type){this.headers.set("content-type",this._bodyBlob.type)}}};if(support.blob){this.blob=function(){var rejected=consumed(this);if(rejected){return rejected}if(this._bodyBlob){return Promise.resolve(this._bodyBlob)}else if(this._bodyFormData){throw new Error("could not read FormData body as blob")}else{return Promise.resolve(new Blob([this._bodyText]))}};this.arrayBuffer=function(){return this.blob().then(readBlobAsArrayBuffer)};this.text=function(){var rejected=consumed(this);if(rejected){return rejected}if(this._bodyBlob){return readBlobAsText(this._bodyBlob)}else if(this._bodyFormData){throw new Error("could not read FormData body as text")}else{return Promise.resolve(this._bodyText)}}}else{this.text=function(){var rejected=consumed(this);return rejected?rejected:Promise.resolve(this._bodyText)}}if(support.formData){this.formData=function(){return this.text().then(decode)}}this.json=function(){return this.text().then(JSON.parse)};return this}var methods=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];function normalizeMethod(method){var upcased=method.toUpperCase();return methods.indexOf(upcased)>-1?upcased:method}function Request(input,options){options=options||{};var body=options.body;if(Request.prototype.isPrototypeOf(input)){if(input.bodyUsed){throw new TypeError("Already read")}this.url=input.url;this.credentials=input.credentials;if(!options.headers){this.headers=new Headers(input.headers)}this.method=input.method;this.mode=input.mode;if(!body){body=input._bodyInit;input.bodyUsed=true}}else{this.url=input}this.credentials=options.credentials||this.credentials||"omit";if(options.headers||!this.headers){this.headers=new Headers(options.headers)}this.method=normalizeMethod(options.method||this.method||"GET");this.mode=options.mode||this.mode||null;this.referrer=null;if((this.method==="GET"||this.method==="HEAD")&&body){throw new TypeError("Body not allowed for GET or HEAD requests")}this._initBody(body)}Request.prototype.clone=function(){return new Request(this)};function decode(body){var form=new FormData;body.trim().split("&").forEach(function(bytes){if(bytes){var split=bytes.split("=");var name=split.shift().replace(/\+/g," ");var value=split.join("=").replace(/\+/g," ");form.append(decodeURIComponent(name),decodeURIComponent(value))}});return form}function headers(xhr){var head=new Headers;var pairs=xhr.getAllResponseHeaders().trim().split("\n");pairs.forEach(function(header){var split=header.trim().split(":");var key=split.shift().trim();var value=split.join(":").trim();head.append(key,value)});return head}Body.call(Request.prototype);function Response(bodyInit,options){if(!options){options={}}this.type="default";this.status=options.status;this.ok=this.status>=200&&this.status<300;this.statusText=options.statusText;this.headers=options.headers instanceof Headers?options.headers:new Headers(options.headers);this.url=options.url||"";this._initBody(bodyInit)}Body.call(Response.prototype);Response.prototype.clone=function(){return new Response(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new Headers(this.headers),url:this.url})};Response.error=function(){var response=new Response(null,{status:0,statusText:""});response.type="error";return response};var redirectStatuses=[301,302,303,307,308];Response.redirect=function(url,status){if(redirectStatuses.indexOf(status)===-1){throw new RangeError("Invalid status code")}return new Response(null,{status:status,headers:{location:url}})};self.Headers=Headers;self.Request=Request;self.Response=Response;self.fetch=function(input,init){return new Promise(function(resolve,reject){var request;if(Request.prototype.isPrototypeOf(input)&&!init){request=input}else{request=new Request(input,init)}var xhr=new XMLHttpRequest;function responseURL(){if("responseURL"in xhr){return xhr.responseURL}if(/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())){return xhr.getResponseHeader("X-Request-URL")}return}xhr.onload=function(){var status=xhr.status===1223?204:xhr.status;if(status<100||status>599){reject(new TypeError("Network request failed"));return}var options={status:status,statusText:xhr.statusText,headers:headers(xhr),url:responseURL()};var body="response"in xhr?xhr.response:xhr.responseText;resolve(new Response(body,options))};xhr.onerror=function(){reject(new TypeError("Network request failed"))};xhr.open(request.method,request.url,true);if(request.credentials==="include"){xhr.withCredentials=true}if("responseType"in xhr&&support.blob){xhr.responseType="blob"}request.headers.forEach(function(value,name){xhr.setRequestHeader(name,value)});xhr.send(typeof request._bodyInit==="undefined"?null:request._bodyInit)})};self.fetch.polyfill=true})(typeof self!=="undefined"?self:this);        }            if (typeof window.CustomEvent !== 'function') {              function CustomEvent(event, params) {            params = params || { bubbles: false, cancelable: false, detail: null };            var evt = document.createEvent('CustomEvent');            evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);            return evt;          }              CustomEvent.prototype = window.Event.prototype;              window.CustomEvent = CustomEvent;            }            (function() {                var language = 'en';                language = 'en';                var modal = false;                    var istatsLabels = {name: 'home.signedout.page' || undefined};                function getMetaValue(propertyName) {              var metaTag = document.querySelector(                "meta[property='" + propertyName + "'], " +                "meta[name='" + propertyName + "']");              if (metaTag) {                return metaTag.getAttribute("content");              } else {                throw new Error('No meta tag called: ' + propertyName)              }            }                function generateCountername() {                if (window.location.protocol === 'file:') {                  return 'local.file';                }                    var pathName = window.location.pathname                    .replace(/\/$/, "")                    .replace(/^\//, "")                    .replace(/\//g, '.');                return pathName + '.page';            }                var additionalPageProperties = {};                additionalPageProperties['custom_var_1'] = 'unknown age';                additionalPageProperties['custom_var_2'] = 'unknown frequency';                additionalPageProperties['custom_var_3'] = 'unknown nation';                additionalPageProperties['custom_var_4'] = 'unknown news region';                var page = {                name: 'home.signedout.page' || istatsLabels.name || generateCountername(),                destination: 'HOMEPAGE_PS' || null,                producer: 'PS_HOMEPAGE' || null,                section: '' || null,                site: '' || istatsLabels.bbc_site || istatsLabels.app_name || istatsLabels.prod_name || null,                contentId: '' || null,                contentType: 'index-home' || null,                edition: '' || null,                additionalProperties: additionalPageProperties            };                function updatePageData(newData) {                page = Object.assign(page, newData);            }                document.addEventListener('bbc-page-reset', function(event) {                if (event.detail && event.detail.page) {                    updatePageData(event.detail.page);                }                document.dispatchEvent(new Event('bbc-page-updated'));            });                window.bbcpage = {                loadModule: function(deps) {                    return new Promise(function (resolve, reject) {                        window.require(deps, function () {                            resolve.apply(this, arguments);                        },                        function (error) {                            reject(error);                        });                    })                },                loadCSS: function (url, timeout) {                    return window.bbcpage.loadModule(['orb/lib/_$'])                        .then(function($) {                            return new Promise(function(resolve, reject) {                                var stylesheet = loadCSS(url);                                $.onloadCSS(stylesheet, function() {                                    resolve();                                });                                if (timeout) {                                    setTimeout(function () { reject(); }, timeout);                                }                            });                    });                },                isModal: function () {                    return modal;                },                getLanguage: function () {                    return new Promise(function(resolve, reject) {                        resolve(language);                    });                },                trackRegion: function (region, labels) {                    return window.bbcpage.loadModule(['istats-1'])                        .then(function(istats) {                                var trackLabels = {                                region: region                            };                                for (var label in labels) {                                trackLabels[label] = labels[label];                            }                                var linkType = labels.linkType || 'internal';                                istats.track(linkType, trackLabels);                        });                },                getName: function() {                    return Promise.resolve(page.name);                },                getDestination: function() {                    return Promise.resolve(page.destination);                },                getProducer: function() {                    return Promise.resolve(page.producer);                },                getSite: function() {                    return Promise.resolve(page.site);                },                getSection: function() {                    return Promise.resolve(page.section);                },                getContentType: function() {                    return Promise.resolve(page.contentType);                },                getContentId: function() {                    return Promise.resolve(page.contentId);                },                getEdition: function() {                  return new Promise(function (resolve, reject) {                    if (page.edition) {                      resolve(page.edition);                      return;                    }                    try {                      resolve(getMetaValue('x-audience').toLowerCase());                    } catch (err){                      // This property is related to Chartbeat; see http://support.chartbeat.com/docs/                      if (window._sf_async_config) {                        resolve(window._sf_async_config.region || null);                      }                    }                    resolve(null);                  });                },                getReferrer: function() {                  return Promise.resolve(window.orb && window.orb.referrer !== null && window.orb.referrer !== undefined ? window.orb.referrer : document.referrer);                },                getAdditionalProperties: function() {                  return Promise.resolve(page.additionalProperties);                }            };                var USERINFO_PREFIX = "www." || "www.";                function initUserCache(orbitUser) {              var availableAttr = [                'X-Country',                'X-Ip_is_advertise_combined',                'X-Ip_is_uk_combined'              ];              var userCache = availableAttr.reduce(function(user, curr, i) {                if (!orbitUser[curr]) {                  return user;                }                var res = Object.assign({}, user);                res[curr] = orbitUser[curr];                return res;              }, {});              if (Object.keys(userCache).length !== availableAttr.length) {                userCache._partial = true;              }              return userCache;            }                var user = initUserCache({            });                function checkStatus(response) {              if (response.status >= 200 && response.status < 300) {                return response;              } else {                var error = new Error(response.statusText);                error.response = response;                throw error;              }            }                function parseJSON(response) {              return response.json();            }                var supportsCors = function() {              return typeof XMLHttpRequest !== 'undefined' &&                'withCredentials' in new XMLHttpRequest();            };                var getUserInfoFallback = function() {              return window.bbcpage.loadModule(['orb/fig'])                .then(function(orbFig) {                  return new Promise(function(resolve, reject) {                    orbFig.load(function(fig) {                      var getCountryFallback = function() {                        if (fig.geo.isUK()) {                          return 'GB';                        } else if (fig.geo.isEU()) {                          return 'EU';                        }                      };                      resolve({                        'X-Country': user.country || getCountryFallback(),                        'X-Ip_is_uk_combined': fig().uk ? 'yes' : 'no',                        'X-Ip_is_advertise_combined': fig().ad ? 'yes' : 'no'                      });                    }, function () {                      reject('Error determining country. Timeout?');                    });                  });                });            };                var _userInfoRequest;            var getUserInfo = function() {                  var host = window.location.host.toString().match(/bbc\.com$/) ? 'bbc.com' : 'bbc.co.uk';              var userInfoUrl = "https://" + USERINFO_PREFIX + host + '/userinfo';                  if (!user._partial) {                return Promise.resolve(user);              }                  if (!_userInfoRequest) {                if (typeof window.fetch === 'undefined' || !supportsCors()) {                  _userInfoRequest = getUserInfoFallback();                } else {                  _userInfoRequest = window.fetch(userInfoUrl, { credentials: 'same-origin' })                    .then(checkStatus)                    .then(parseJSON)                    .then(function(userInfo) {                      user = userInfo;                      return user;                    });                }              }                  return _userInfoRequest;            };                window.bbcuser = {                getHashedId: function() {                    return window.bbcpage.loadModule(['idcta-v2/idcta-1'])                        .then(function(idcta) {                            return idcta.getCookieInstance().getHidFromCookie();                    });                },                    getCountry: function() {                    if (user['X-Country']) {                        return Promise.resolve(user['X-Country']);                    }                    return getUserInfo().then(function(userInfo) {                        return userInfo['X-Country'] || 'GB';                    });                },                    isUKCombined: function() {                    return getUserInfo().then(function(userInfo) {                        if (!userInfo['X-Ip_is_uk_combined']) {                            throw new Error('missing isUKCombined from userinfo response');                        }                        return userInfo['X-Ip_is_uk_combined'].toLowerCase() === 'yes';                    })                },                    canSeeAdverts: function() {                    return getUserInfo().then(function(userInfo) {                        if (!userInfo['X-Ip_is_advertise_combined']) {                            throw new Error('missing canSeeAdverts from userinfo response');                        }                        return userInfo['X-Ip_is_advertise_combined'].toLowerCase() === "yes";                    });                },                    isSignedIn: function() {                    return window.bbcpage.loadModule(['idcta-v2/idcta-1'])                        .then(function(idcta) {                            return (idcta && idcta.getCookieInstance().hasCookie());                        });                },                allowsPerformanceCookies: function() {                    return window.bbcpage.loadModule(['orb/cookies'])                            .then(function(bbccookies) {                                return !!bbccookies.cookiesEnabled() && !!bbccookies.readPolicy('performance');                            });                },                allowsFunctionalCookies: function() {                    return window.bbcpage.loadModule(['orb/cookies'])                            .then(function(bbccookies) {                                return !!bbccookies.cookiesEnabled() && !!bbccookies.readPolicy('personalisation');                            });                },                getCookieValue: function(cookieName) {                    return window.bbcpage.loadModule(['orb/cookies'])                            .then(function(bbccookies) {                                return bbccookies.get(cookieName);                            });                },                resetCookiesPreferences: function() {                    return window.bbcpage.loadModule(['orb/cookies'])                            .then(function(bbccookies) {                                bbccookies.setDefaultCookiesSingleDomain();                            });                },                hasCookiesEnabled: function() {                    return window.bbcpage.loadModule(['orb/cookies'])                            .then(function(bbccookies) {                                return !!bbccookies.cookiesEnabled();                            });                },                hasSeenCookieBanner: function() {                    return window.bbcpage.loadModule(['orb/cookies'])                            .then(function (bbccookies) {                                return !!bbccookies.isCookiePolicySet();                            });                },                logEvent: function (verb, noun, extraLabels) {                    return window.bbcuser.hasCookiesEnabled()                        .then(function(allowsCookies) {                            if (allowsCookies) {                                return window.bbcpage.loadModule(['istats-1'])                                    .then(function(istats) {                                        istats.log(verb, noun, extraLabels);                                    });                            } else {                                throw new Error('User cannot be tracked due to cookies preferences.');                            }                        });                },            };            }());</script><script src="https://nav.files.bbci.co.uk/orbit/1b2e292884201dd13064a9204e177864/js/require.min.js"></script>   <script src="https://nav.files.bbci.co.uk/orbit-webmodules/0.0.2-448.45dcd56/cookie-banner/cookie-library.min.js"></script><script type="text/javascript">if (window.define !==  undefined) {        define('orb/cookies', function() {          return window.bbccookies;        });      }'); if (/[?|&]ex-dp/.test(window.location.href) || document.cookie.indexOf('ex-dp=') !== -1) { bbcdotcom.utils.addHtmlTagClass('bbcdotcom-ex-dp'); } } })(); /*]]>*/</script><script type="text/javascript">var initOptimizely = (function(isEnabled){ if(!isEnabled) return; var logger = window.bbcdotcom.Logger('bbcdotcom:head:optimizely'); /* Allow Optimizely in these paths */ var allowPaths = ['/', '/wwhp']; /* Only run on optimizely on homepage */ if (bbcdotcom.utils && allowPaths.indexOf(window.location.pathname) !== -1){ /* set correct OptimizelyURL for prod or sandbox */ var optimizelyURL = "https://cdn.optimizely.com/public/4621041136/s/bbccom_sandbox.js"; if(window.location.hostname === 'www.bbc.com') { optimizelyURL = "https://cdn.optimizely.com/public/4621041136/s/bbccom_prod.js"; } /* Set cookie to 1 year */ window['optimizely'] = window['optimizely'] || []; window['optimizely'].push({ "type": "cookieExpiration", "cookieExpirationDays": 365 }); document.write('<script type="text/javascript" src="'+optimizelyURL+'">\x3C/script>'); } })( bbcdotcom.config.isOptimizelyEnabled() );</script><script type="text/javascript">/*<![CDATA[*/ if ( window.bbcdotcom && bbcdotcom.data && bbcdotcom.data.ads && bbcdotcom.data.ads == 1 && bbcdotcom.config && bbcdotcom.config.isGrapeshotEnabled && bbcdotcom.config.isGrapeshotEnabled() && bbcdotcom.config.isWorldService && !bbcdotcom.config.isWorldService() ) { var gs_channels="DEFAULT"; (function () { var gsurl = window.location.href.split("?")[0]; bbcdotcomScripts.push({src:'https://bbc.gscontxt.net/?url='+encodeURIComponent(gsurl)}); })(); } /*]]>*/</script><script type="text/javascript">/*<![CDATA[*/ if (window.bbcdotcom && bbcdotcom.config && bbcdotcom.config.isLotameActive && bbcdotcom.config.isLotameActive()&& bbcdotcom.config.isLotameEnabled && bbcdotcom.config.isLotameEnabled()){ (function () { var clientId, lotameUrl, lotameAudienceUrl; clientId = (bbcdotcom.config.isWorldService && bbcdotcom.config.isWorldService()) ? '10826' : '10816'; lotameUrl = 'https://tags.crwdcntrl.net/c/'+clientId+'/cc.js?ns='+clientId; lotameAudienceUrl = 'https://ad.crwdcntrl.net/5/c=10815/pe=y/var=ccauds'; bbcdotcomScripts.push({src:lotameUrl,id:"LOTCC"+clientId}); bbcdotcomScripts.push({src:lotameAudienceUrl}); })(); } /*]]>*/</script><script type="text/javascript">/*<![CDATA[*/ /** * ASYNC waits to make any gpt requests until the bottom of the page */ if ( window.bbcdotcom && bbcdotcom.data && bbcdotcom.data.ads && bbcdotcom.data.ads == 1 && bbcdotcom.config && bbcdotcom.config.isAsync && bbcdotcom.config.isAsync() && bbcdotcom.config.isAdsEnabled && bbcdotcom.config.isAdsEnabled() ) { (function () { bbcdotcomScripts.push({src:'https://securepubads.g.doubleclick.net/tag/js/gpt.js'}); })(); } /*]]>*/</script><script type="text/javascript">/*<![CDATA[*/ /* Load Lotame, Grapeshot and GPT without blocking rendering but executing in order */ if ( window.bbcdotcom && bbcdotcom.config && bbcdotcomScripts.length > 0 ) { (function () { bbcdotcom.checkThirdPartyFirst(function(){ if (!bbcdotcom.config.isThirdPartyDisabledEU()){ bbcdotcomScripts.forEach(function(item) { var script = document.createElement('script'); script.async = false; if(item.id) script.id = item.id; script.src = item.src; document.head.appendChild(script); }); } }); })(); } /*]]>*/</script><script type="text/javascript">/*<![CDATA[*/ (function() { window.bbcdotcom.head = true; }()); /*]]>*/</script><script type="text/javascript">// Globally available search context  window.SEARCHBOX={"variant":"default","locale":"en","feature":"searchbox","navSearchboxStaticPrefix":"https://nav.files.bbci.co.uk/searchbox/98f174438ebc473063e6dde132503cbb/","searchboxAppStaticPrefix":"https://nav.files.bbci.co.uk/searchbox/98f174438ebc473063e6dde132503cbb/drawer","searchFormHtml":"<div tabindex=\"-1\" data-reactroot=\"\"><div><section class=\"se-searchbox-panel\"><div class=\"se-g-wrap\"><div class=\"se-g-layout\"><div class=\"se-g-layout__item se-searchbox-title\" aria-hidden=\"true\">search</div><div class=\"se-g-layout__item se-searchbox\"><form accept-charset=\"utf-8\" id=\"searchboxDrawerForm\" method=\"get\" action=\"https://search.bbc.co.uk/search\"><label class=\"se-searchbox__input\" for=\"se-searchbox-input-field\"><span class=\"se-sr-only\">Search Term</span><input type=\"text\" name=\"q\" value=\"\" id=\"se-searchbox-input-field\" class=\"se-searchbox__input__field\" maxLength=\"512\" autoComplete=\"off\" autoCorrect=\"off\" autoCapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\"/></label><input type=\"hidden\" name=\"scope\" value=\"\"/><button type=\"submit\" class=\"se-searchbox__submit\" tabindex=\"0\" data-bbc-container=\"se-searchbox-panel\" data-bbc-title=\"search-icon\" data-bbc-metadata=\"{&quot;PAR&quot;:&quot;form::1&quot;,&quot;CHD&quot;:&quot;button::1&quot;}\">Search</button><button type=\"button\" class=\"se-searchbox__clear se-searchbox__clear--visible\" tabindex=\"0\" data-bbc-container=\"se-searchbox-panel\" data-bbc-title=\"clear-icon\" data-bbc-metadata=\"{&quot;PAR&quot;:&quot;form::1&quot;,&quot;CHD&quot;:&quot;button::2&quot;}\">Close</button></form></div></div></div></section><div aria-live=\"polite\" aria-atomic=\"true\" class=\"se-suggestions-container\"><section class=\"se-g-wrap\"></section></div></div></div>","searchScopePlaceholder":"","searchScopeParam":"","searchScopeTemplate":"","searchPlaceholderWrapperStart":"","searchPlaceholderWrapperEnd":""};  window.SEARCHBOX.suppress = false;  window.SEARCHBOX.searchScope = SEARCHBOX.searchScopeTemplate.split('-')[0];</script><link rel="stylesheet" href="https://nav.files.bbci.co.uk/searchbox/98f174438ebc473063e6dde132503cbb/css/main.css">  <script type="text/javascript" src="https://nav.files.bbci.co.uk/searchbox/98f174438ebc473063e6dde132503cbb/script/html5shiv.min.js"></script>  <script type="text/javascript">window['searchboxIEVersion'] = 8;</script>  <link rel="stylesheet" href="https://nav.files.bbci.co.uk/searchbox/98f174438ebc473063e6dde132503cbb/css/ie8.css">  <script type="text/javascript">window['searchboxIEVersion'] = 9;</script><script type="text/javascript">require.config({        "paths": {            "orb/async/_footerpromo": 'https://nav.files.bbci.co.uk/navpromo/1a758b67be1b457163af81ff41c92946/js/async/_footerpromo'        }    });</script> <script type="text/javascript">"use strict";!function(){window.__reverbStaticLocation="https://mybbc-analytics.files.bbci.co.uk/reverb-client-js/",window.__smarttagVersion="5.18.2",window.__reverb={},window.__reverb.__reverbLoadedPromise=new Promise(function(e,n){window.__reverb.__resolveReverbLoaded=e,window.__reverb.__rejectReverbLoaded=n}),window.__reverb.__reverbTimeout=setTimeout(function(){window.__reverb.__rejectReverbLoaded()},5e3);var n=function(r,d){window.__reverb.__reverbLoadedPromise.then(function(e){if(r&&r.detail){var n=r.detail.label,t=r.detail.type,i=r.detail.elem,o=r.detail.originalEvent;r.detail.isClick&&(d=r.detail.isClick),e.userActionEvent(t,n,r.detail,i,o,d)}},function(){console.log("Reverb failed to load. Event not sent")})};document.addEventListener("bbc-user-event",function(e){n(e,!1)}),document.addEventListener("bbc-user-click",function(e){n(e,!0)}),document.addEventListener("bbc-page-updated",function(){window.__reverb.__reverbLoadedPromise.then(function(e){e.initialise().then(function(){return e.viewEvent()})},function(){console.log("Reverb failed to load. Event not sent")})})}();</script><script type="text/javascript" src="https://mybbc-analytics.files.bbci.co.uk/reverb-client-js/reverb-1.4.0.js" async=""></script><script type="text/javascript">      require.config({        "paths": {            "relay-1": "//static.bbci.co.uk/frameworks/relay/0.2.6/sharedmodules/relay-1"        }      });    </head><body ><script type="text/javascript">(function () {  window.homepagev5 = {    config: {      app: {        locationServicesEnv: 'live',        locationServiceApiKey: '1mEWx6wa6AEEm5F2kE1Q4whkp9XFNApn',        locationServiceUrl: 'https://locator-service.api.bbci.co.uk',        assetPrefix: '//homepage.files.bbci.co.uk/homepage-v5/d41d8cd98f00b204e9800998ecf8427e',        recommendations: {          tvEndpoint: 'https://recs.api.bbc.co.uk/recommendations/tv',          radioEndpoint: 'https://recs.api.bbc.co.uk/recommendations/radio'        },        registerUrl: 'https://ssl.bbc.co.uk/id/register',        signInUrl: 'https://ssl.bbc.co.uk/id/signin',        customiseUrl: 'https://www.bbc.co.uk/home/customise',        uas: {          apiKey: 'atk0a997sff3g',          env: 'live'        },        isNation:false,        enablePersonalisation:false,        isPersonalised:false,        isDefaultModules:1,        enableDeduplication:true,        weather: {          v6BaseUrl: 'https://weather-broker-cdn.api.bbci.co.uk'        }      }    }  };})();            <![if (IE 8)]>                <header id="orb-banner" role="banner" class="orb-old-ie orb-ie8" aria-label="BBC">            <![endif]>            <![if (IE 7)]>                <header id="orb-banner" role="banner" class="orb-old-ie orb-ie7" aria-label="BBC">            <![endif]>            <![if (IE 6)]>                <header id="orb-banner" role="banner" class="orb-old-ie orb-ie6" aria-label="BBC">            <![endif]>        <div id="orb-header" class="orb-nav-pri orb-nav-pri-white orb-nav-empty" dir="ltr"><div class="orb-nav-pri-container b-r b-g-p"><div class="orb-nav-section orb-nav-blocks"><a href="https://www.bbc.co.uk">Homepage</a></div><section><div class="orb-skip-links"><h2>Accessibility links</h2><ul><li><a href="#hp-bbc-homepage-content">Skip to content</a></li><li><a id="orb-accessibility-help" href="https://www.bbc.co.uk/accessibility/">Accessibility Help</a></li></ul></div></section><div id="mybbc-wrapper" class="orb-nav-section orb-nav-id orb-nav-focus orb-nav-id-default"><div id="idcta-statusbar" class="orb-nav-section orb-nav-focus" data-bbc-container="id-cta" data-bbc-event-type="click" data-bbc-ignore-views="1" data-bbc-metadata="{&quot;id-cta-type&quot;: &quot;statusbar-orb&quot;}" data-bbc-source="responsive_web" data-bbc-title="id-cta-sign-in"><a id="idcta-link" href="https://account.bbc.com/account"><span id="idcta-username">BBC Account</span></a></div><script type="text/javascript">require(['idcta/statusbar'], function (statusbar) {new statusbar.Statusbar({id: 'idcta-statusbar', publiclyCacheable: true});});</script><div id="orb-modules">    