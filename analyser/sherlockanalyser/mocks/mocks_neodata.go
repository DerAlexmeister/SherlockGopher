// Code generated by MockGen. DO NOT EDIT.
// Source: ../../sherlockneo/neodata.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	neo4j "github.com/neo4j/neo4j-go-driver/neo4j"
	reflect "reflect"
)

// MockNeoDataInterface is a mock of NeoDataInterface interface
type MockNeoDataInterface struct {
	ctrl     *gomock.Controller
	recorder *MockNeoDataInterfaceMockRecorder
}

// MockNeoDataInterfaceMockRecorder is the mock recorder for MockNeoDataInterface
type MockNeoDataInterfaceMockRecorder struct {
	mock *MockNeoDataInterface
}

// NewMockNeoDataInterface creates a new mock instance
func NewMockNeoDataInterface(ctrl *gomock.Controller) *MockNeoDataInterface {
	mock := &MockNeoDataInterface{ctrl: ctrl}
	mock.recorder = &MockNeoDataInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNeoDataInterface) EXPECT() *MockNeoDataInterfaceMockRecorder {
	return m.recorder
}

// Save mocks base method
func (m *MockNeoDataInterface) Save(session neo4j.Session) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Save", session)
}

// Save indicates an expected call of Save
func (mr *MockNeoDataInterfaceMockRecorder) Save(session interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockNeoDataInterface)(nil).Save), session)
}
