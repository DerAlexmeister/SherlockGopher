// Code generated by MockGen. DO NOT EDIT.
// Source: neoSaver.go

// Package mock_sherlockanalyser is a generated GoMock package.
package sherlockanalyser

import (
	gomock "github.com/golang/mock/gomock"
	neo4j "github.com/neo4j/neo4j-go-driver/neo4j"
	reflect "reflect"
)

// MockneoSaverInterface is a mock of neoSaverInterface interface
type MockneoSaverInterface struct {
	ctrl     *gomock.Controller
	recorder *MockneoSaverInterfaceMockRecorder
}

// MockneoSaverInterfaceMockRecorder is the mock recorder for MockneoSaverInterface
type MockneoSaverInterfaceMockRecorder struct {
	mock *MockneoSaverInterface
}

// NewMockneoSaverInterface creates a new mock instance
func NewMockneoSaverInterface(ctrl *gomock.Controller) *MockneoSaverInterface {
	mock := &MockneoSaverInterface{ctrl: ctrl}
	mock.recorder = &MockneoSaverInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockneoSaverInterface) EXPECT() *MockneoSaverInterfaceMockRecorder {
	return m.recorder
}

// Contains mocks base method
func (m *MockneoSaverInterface) Contains(analyserTask *AnalyserTaskRequest) []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Contains", analyserTask)
	ret0, _ := ret[0].([]string)
	return ret0
}

// Contains indicates an expected call of Contains
func (mr *MockneoSaverInterfaceMockRecorder) Contains(analyserTask interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Contains", reflect.TypeOf((*MockneoSaverInterface)(nil).Contains), analyserTask)
}

// Save mocks base method
func (m *MockneoSaverInterface) Save(analyserTask *AnalyserTaskRequest) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Save", analyserTask)
}

// Save indicates an expected call of Save
func (mr *MockneoSaverInterfaceMockRecorder) Save(analyserTask interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockneoSaverInterface)(nil).Save), analyserTask)
}

// GetSession mocks base method
func (m *MockneoSaverInterface) GetSession() *neo4j.Session {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSession")
	ret0, _ := ret[0].(*neo4j.Session)
	return ret0
}

// GetSession indicates an expected call of GetSession
func (mr *MockneoSaverInterfaceMockRecorder) GetSession() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSession", reflect.TypeOf((*MockneoSaverInterface)(nil).GetSession))
}

// SetDriver mocks base method
func (m *MockneoSaverInterface) SetDriver(driver neo4j.Driver) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetDriver", driver)
}

// SetDriver indicates an expected call of SetDriver
func (mr *MockneoSaverInterfaceMockRecorder) SetDriver(driver interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetDriver", reflect.TypeOf((*MockneoSaverInterface)(nil).SetDriver), driver)
}
