{"version":3,"sources":["assets/img/sherlockgopher.png","serviceWorker.js","sidebar.js","searchbar.js","App.js","siteperformence.js","metagraph.js","controls.js","scriptingapi.js","nodedetails.js","graph.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","SidebarMenu","props","state","sidebarOpen","onSetSidebarOpen","bind","open","this","setState","sidebar","class","alt","src","logo","to","href","onSetOpen","styles","background","zIndex","height","width","color","position","onClick","React","Component","SearchBar","style","top","left","App","SEARCHENDPOINT","showComponent","value","message","showMessage","isErrorMessage","handleClick","handleChange","handleSubmit","serverRequest","interval","setInterval","a","error","console","log","clearInterval","param","submiturl","axios","post","JSON","stringify","url","then","res","response","data","undefined","Message","Status","catch","event","target","preventDefault","textAlign","role","onSubmit","onChange","name","placeholder","type","SitePerformence","PERFORMENCE","items","amountofentries","amountofHunderter","amountofZweiHunderter","amountofDreiHunderter","amountofVierHunderter","amountofFünfHunderter","amountoferrors","averageRTT","isEmpty","getCardStyle","getAmountOfEntrys","makeClickableURL","chuncks","entries","einhunderter","zweihunderter","dreithunderter","vierhunderter","fünfhunderter","errors","avrtt","map","item","Statuscode","Responsetime","Math","floor","Axios","get","Response","exception","status","lurl","startsWith","id","Address","ControlGraph","MONITOR","meta","metamessage","hasMetaError","getMetaGraph","prepareMeta","getColorByStatus","prep","key","push","lstatus","readymetaAnalyser","readymetaCrawler","length","marginRight","colors","download","Controls","DROPITENDPOINT","CHANGESTATUS","STATUSENDPOINT","AREYOUTHERE","haserror","showmessage","statusmessage","hasstatuserror","changestatusmessage","changestatushasMessage","changestatushasErrorMessage","dropIt","areyouthere","submitStatusToWebserver","getStatus","operation","AnalyserStatus","CrawlerStatus","ScriptingAPI","backgroundColor","language","docco","Nodedetails","reponsegoterror","searchurl","getPrettyResponse","isVerified","getAdvancedNodeInformation","instance","arr","String","Filetype","for","required","NodeGraph","METAINFORMATION","ALLINFORMATIONPERFORMANCE","is2d","seconds","metaError","metahasError","showMetaError","metadata","dataError","dataHasError","showDataError","responseData","getMetaInformation","getGraphData","getGraph","timerInterval","setTimeout","ConstantInterval","larray","entrie","graphData","nodeLabel","linkDirectionalArrowLength","linkDirectionalArrowRelPos","linkLabel","showNavInfo","nodeThreeObject","node","sprite","SpriteText","textHeight","finalmetadata","makeMetaDataIterable","toUpperCase","display","margin","padding","router","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a5c6e542.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sherlockgopher.4338956c.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\n//React Standard\nimport React from \"react\";\nimport Sidebar from \"react-sidebar\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Link } from 'react-router-dom'\n\n//Stylesheets\nimport './assets/css/App.css'\nimport './assets/css/Sidebar.css'\n\n//Images\nimport logo from './assets/img/sherlockgopher.png'\n\nexport default class SidebarMenu extends React.Component {\n  \n  constructor(props) {\n    super(props);\n      this.state = {\n        sidebarOpen: false\n      };\n      this.onSetSidebarOpen = this.onSetSidebarOpen.bind(this);\n  }\n\n  /*\n  handle the click to open the sidebar.\n  */\n  onSetSidebarOpen(open) {\n    this.setState({ sidebarOpen: open });\n  }\n    \n    render() {\n        return (\n          <div>\n             <Sidebar\n                sidebar={<div>\n                  <div class=\"innerdiv\">\n                  <img class=\"menulogo\" alt=\"sherlock gopher\" src={logo}></img>\n                  <hr class=\"line\"></hr>\n                  <p class=\"menubartitle\">Sherlock Gopher</p>\n                  <hr class=\"line\"></hr>\n                    <ul class=\"innerlist\">\n                      <li><Link class=\"innerlink\" to=\"/\">Home</Link></li>\n                      <li><Link class=\"innerlink\" to=\"/Graph\">Graph</Link></li>\n                      <li><Link class=\"innerlink\" to=\"/sitesperformence\">PoS</Link></li>\n                      <li><Link class=\"innerlink\" to=\"/nodedetails\">Find a Node</Link></li>\n                      <li><Link class=\"innerlink\" to=\"/controls\">Controls</Link></li>\n                    </ul>\n                    <hr class=\"line\"></hr>\n                    <ul class=\"innerlist\">\n                      <li><Link class=\"innerlink\" to=\"/scriptingapi\">Scripting API</Link></li>\n                    </ul>\n                    <hr class=\"line\"></hr>\n                    <ul class=\"innerlist\">\n                      <li><a class=\"innerlink\" href=\"https://github.com/DerAlexx/SherlockGopher\"> Github </a></li>\n                    </ul>\n                  </div>\n                </div>}\n                open={this.state.sidebarOpen}\n                onSetOpen={this.onSetSidebarOpen}\n                styles={{ sidebar: { \n                  background: \"#212f3d\", \n                  zIndex:200, \n                  height:\"100%\", \n                  width:250,\n                  color: \"white\",\n                  position:\"fixed\",\n                }\n              }}\n              >\n              </Sidebar>\n              <button class=\"btn btn-outline-light openbutton\" onClick={() => this.onSetSidebarOpen(true)}>&#x2630; Menu </button>\n          </div>\n        );\n      }\n     \n}","/*\nSearchbar Represents the menubanner at the top with a sidebar menu.\n*/\n\n//React Standard\nimport 'bootstrap/dist/css/bootstrap.css';\nimport React from \"react\";\n\n//Stylesheets\nimport './assets/css/App.css'\n\n// Javascript\nimport SidebarMenu from './sidebar.js';\n\n//Images\nimport logo from './assets/img/sherlockgopher.png'\n\nexport default class SearchBar extends React.Component {\n \n    render() {\n      return (       \n          <div style={{width:\"100%\",height:'100%', position: \"absolute\", top:\"0px\", left: \"0px\"}}>\n            <SidebarMenu></SidebarMenu>\n            <div class=\"searchbar\" style={{zIndex: 10}}>\n              <h4 class=\"title\">SherlockGopher</h4>\n            </div>\n            <a href=\"/\"><img class=\"logo\" alt=\"sherlock gopher\" src={logo}></img></a>\n          </div>\n      )\n    }\n  }","/*\nApp represents the entrypoint to the frontend.\n*/\n\n//React Standard\nimport 'bootstrap/dist/css/bootstrap.css';\nimport React from \"react\";\nimport axios from 'axios';\n\n//Javascripts\nimport SearchBar from './searchbar.js';\n\n//Stylesheets\nimport './assets/css/App.css';\n\n//Images\nimport logo from './assets/img/sherlockgopher.png'\n\n// The actual APP Component which will be rendered by calling the Website.\nexport default class App extends React.Component {\n\n  SEARCHENDPOINT = \"http://0.0.0.0:8081/graph/v1/search\"\n  \n  state = {\n    showComponent: 0,\n    value: \"\", \n    message: \"\",\n    showMessage: false,\n    isErrorMessage: false,\n  }\n  \n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.serverRequest = this.serverRequest.bind(this);\n\n    this.interval = 0;\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(async () => {\n      try {\n        this.setState({\n          showMessage: false,\n        })\n      } catch (error) {\n          console.log(\"An error occured while trying to get the Metadata.\")\n          }\n    }, 5000) \n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval)\n  }\n\n  /*\n  handleClick will handle a click on the button to search.\n  */\n  handleClick(param) {\n    this.setState({\n      showComponent:param\n    })\n  }\n\n  /*\n  serverRequest will make a search request and handle the response.\n  */\n  serverRequest(submiturl) {\n    axios.post(this.SEARCHENDPOINT,\n      JSON.stringify({\n        url: submiturl\n    })).then(res => {\n          const response = res.data \n          try {\n            if (response.Message !== undefined) {\n              this.setState({\n                message: response.Message,\n                showMessage: true,\n                isErrorMessage: true,\n                value: \"\",\n              })\n            } else {\n              if (response.Status !== undefined) {\n                this.setState({\n                  message: \"Submitted URL to the Crawler.\",\n                  showMessage: true,\n                  isErrorMessage: false,\n                  value: \"\",\n                })\n              } else {\n                this.setState({\n                  message: \"Url Submitted\",\n                  showMessage: true,\n                  isErrorMessage: false,\n                  value: \"\",\n                })\n              }\n            }\n          } catch (error) {\n            this.setState({\n              message: \"An error occured while trying to process the response. Reload the page and try again!\",\n              showMessage: true,\n              isErrorMessage: true,\n              value: \"\",\n            })\n          }\n    }).catch(response => {\n        this.setState({\n          message: \"An error occured while trying to process your request. Maybe the URL is malformed!\",\n          showMessage: true,\n          isErrorMessage: true,\n          value: \"\",\n        })\n    });\n  }\n\n  /*\n  handleChange handles the change of the search-field.\n  */\n  handleChange(event) {   \n    this.setState(\n      { \n        value: event.target.value,\n        message: undefined,\n        showMessage: false,\n        isErrorMessage: false,\n      }\n    );  \n  }\n\n  /*\n  handleSubmit will work with the submitted value.\n  */\n  handleSubmit(event) {\n    event.preventDefault();\n    this.serverRequest(this.state.value)\n  }\n\n  render() {\n    const {message, showMessage, isErrorMessage} = this.state\n    return (\n      <div>\n          <SearchBar></SearchBar>\n          <div class=\"body\">\n            {\n              showMessage ? \n              <div style={{textAlign: \"center\"}} class={isErrorMessage ? \"alert alert-danger\" : \"alert alert-success\"} role=\"alert\">\n                {message}\n              </div>\n              : null\n            }\n            <img class=\"bigLogo\" alt=\"sherlock gopher\" src={logo}></img>\n              <form onSubmit={this.handleSubmit} class=\"searchbarform\" >\n                <input class=\"searchbarinput\" value={this.state.value} onChange={this.handleChange} name=\"url\" placeholder=\"Hier könnte Ihre Werbung stehen!\"></input>\n                <p>\n                  <br></br>\n                  <button class=\"btn btn-dark searchbarbutton\" type=\"submit\">Schnüffel</button>                  \n                </p>\n              </form>\n          </div>\n      </div>\n    )\n  }\n}","/*\nReact component showing the performence of all websites.\n*/\n\n//React\nimport React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\n// Non-Standard\n//import PERFORMENCE from './const.js';\nimport SearchBar from './searchbar.js';\n\n//Stylesheets\nimport './assets/css/App.css'\nimport Axios from \"axios\";\n\nexport default class SitePerformence extends React.Component {\n\n    PERFORMENCE = \"http://0.0.0.0:8081/graph/v1/performenceofsites\"\n\n    state = {\n      items: [],\n      amountofentries: 0,\n      amountofHunderter: 0,\n      amountofZweiHunderter: 0,\n      amountofDreiHunderter: 0,\n      amountofVierHunderter:0,\n      amountofFünfHunderter:0,\n      amountoferrors: 0,\n      averageRTT: 0,\n      isEmpty: false\n    }\n  \n    constructor(props) {\n      super(props);\n      this.getCardStyle = this.getCardStyle.bind(this);\n      this.getAmountOfEntrys = this.getAmountOfEntrys.bind(this);\n      this.makeClickableURL = this.makeClickableURL.bind(this)\n      this.interval = 0;\n    }\n    \n    /*\n    getAmountOfEntrys will count the Amount of entrys.\n    */\n    getAmountOfEntrys(chuncks) {\n      var entries = 0\n      var einhunderter = 0\n      var zweihunderter = 0\n      var dreithunderter = 0\n      var vierhunderter = 0\n      var fünfhunderter = 0\n      var errors = 0\n      var avrtt = 0\n      chuncks.map(item => {\n        console.log(item.Statuscode)\n        if (item.Statuscode >= 200 && item.Statuscode < 300) { //200\n          zweihunderter++\n        } else if (item.Statuscode >= 300 && item.Statuscode < 400) { //300\n          dreithunderter++\n        } else if (item.Statuscode >= 400 && item.Statuscode < 500) { //400\n          vierhunderter++\n        } else if (item.Statuscode >= 500 && item.Statuscode < 600) { //500\n          fünfhunderter++\n        } else if (item.Statuscode >= 100 && item.Statuscode < 200) { //100\n          einhunderter++\n        }  else {  // Errors\n          errors++\n        }\n        entries++ \n        avrtt += (item.Responsetime * 1)\n        return null\n      },\n      )\n      avrtt = Math.floor(avrtt/entries)\n      this.setState({\n        amountofentries: entries, amountofHunderter: einhunderter, amountofZweiHunderter: zweihunderter, \n        amountofDreiHunderter: dreithunderter, amountofVierHunderter: vierhunderter, amountofFünfHunderter: fünfhunderter, \n        amountoferrors: errors, averageRTT: avrtt\n      })\n    }\n\n    componentDidMount() {\n      try {\n        this.interval = setInterval(async() => {\n          Axios.get(this.PERFORMENCE).then(Response => {\n            const chuncks = Response.data\n            this.getAmountOfEntrys(chuncks)\n            this.setState({\n              items: chuncks,\n              isEmpty: false\n            })\n          }).catch(errors => {\n            console.log(errors)\n            this.setState({\n              items: [],\n              isEmpty: true\n            })\n          })\n        }, 1000)\n      } catch (exception) {\n        console.log(exception)\n      }\n    }\n\n    componentWillUnmount() {\n      clearInterval(this.interval)\n    }\n  \n    /*\n    getCardStyle will return the Style of a Card so e.g the site return 200 Ok so the card style will be alert-success.\n    */\n    getCardStyle(status) {\n      if (status > 199 && status < 300) { //200\n        return \"alert alert-success\"\n      } else if (status > 299 && status < 400) { //300\n        return \"alert alert-warning\"\n      } else if (status > 399 && status < 500) { //400\n        return \"alert alert-danger\"\n      } else if (status > 499 && status < 600) { //500\n        return \"alert alert-danger\"\n      } else if (status > 99 && status < 200) { //100\n        return \"alert alert-success\"\n      }  else {  // Errors\n        return \"alert alert-info\"\n      }\n    }\n\n    /*\n    makeClickableURL will turn a url in a clickable URL.\n    */\n    makeClickableURL(lurl) {\n      if (lurl.startsWith(\"http://\") || lurl.startsWith(\"https://\")) {\n        return lurl;\n      } else {\n        return \"http://\" + lurl\n      }\n    }\n  \n    render() {\n      const {\n        items, amountofentries, amountofHunderter, amountofZweiHunderter, amountofDreiHunderter, amountofVierHunderter, \n        amountofFünfHunderter, amountoferrors, averageRTT, isEmpty\n      } = this.state\n      return ( \n        <div>\n          <SearchBar></SearchBar>\n            <div class=\"body\">\n          <div id=\"tableElement\" >\n            <p>Metainformation</p>\n            <span class=\"badge badge-pill badge-dark\"> Entries: {amountofentries} </span> \n            <span style={{color: \"#d5d8dc\"}}>   </span>\n            <span class=\"badge badge-pill badge-success\"> 100er: {amountofHunderter}</span>\n            <span style={{color: \"#d5d8dc\"}}>   </span>\n            <span class=\"badge badge-pill badge-success\"> 200er: {amountofZweiHunderter}</span>\n            <span style={{color: \"#d5d8dc\"}}>   </span>\n            <span class=\"badge badge-pill badge-warning\"> 300er: {amountofDreiHunderter}</span>\n            <span style={{color: \"#d5d8dc\"}}>   </span>\n            <span class=\"badge badge-pill badge-danger\"> 400er: {amountofVierHunderter}</span>\n            <span style={{color: \"#d5d8dc\"}}>   </span>\n            <span class=\"badge badge-pill badge-danger\"> 500er: {amountofFünfHunderter}</span>\n            <span style={{color: \"#d5d8dc\"}}>  </span>\n            <span class=\"badge badge-pill badge-danger\"> Errors: {amountoferrors}</span>\n            <span style={{color: \"#d5d8dc\"}}>  </span>\n            <span class=\"badge badge-pill badge-dark\"> Ø RTT: {averageRTT}</span>\n            <hr></hr>\n            { isEmpty ? \n              <div class=\"alert alert-success\">\n                There a no entries in the database. \n              </div> :\n                items.map(item => (\n                  <div class={this.getCardStyle(item.Statuscode)} role=\"alert\">\n                  <h4 class=\"alert-heading\"># <a class=\"alert-link\" href={this.makeClickableURL(item.Address)}>{item.Address}</a></h4>\n                  <p class=\"mb-0\">\n                    SherlockGopher gathered following information for address {item.Address}:<hr></hr>\n                    <p class=\"font-weight-bold\"><b>Responsetime:</b> {item.Responsetime} ms,</p> \n                    <p class=\"font-weight-bold\"><b>Responsecode:</b> {item.Statuscode} (HTTP/s Standardcode)</p>\n                  </p>\n                </div>\n                  ))\n          }\n          </div>\n        </div>\n        </div>\n      )\n    }\n  }","//React standard\nimport React from 'react';\nimport Axios from 'axios';\nimport { PieChart } from 'react-chartkick'\nimport 'chart.js'\n\nexport default class ControlGraph extends React.Component {\n\n    MONITOR = \"http://localhost:8081/monitor/v1/meta\"\n\n    state = {\n        // /monitor/v1/meta\n        meta: [],\n        metamessage: \"\",\n        hasMetaError: false,\n\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.getMetaGraph = this.getMetaGraph.bind(this);\n        this.prepareMeta = this.prepareMeta.bind(this);\n        this.getColorByStatus = this.getColorByStatus.bind(this);\n        this.interval = 0;\n\n    }\n\n    componentDidMount(){\n        this.interval = setInterval(() => {\n            try {\n                this.getMetaGraph()\n            } catch(error) {\n                console.log(\"cannot clear state.\")\n            }\n        }, 1500)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval)\n    }\n\n    /*\n    Will fetch the meta information for the crawler and anaylser -> Status /monitor/v1/meta\n    */\n    getMetaGraph() {\n        Axios.get(this.MONITOR).then( res => {\n            const response = res.data;\n            try {\n                this.setState({\n                    meta: response,\n                    metamessage: \"No error\",\n                    hasMetaError: false,\n                })\n            } catch (error) {\n                this.setState({\n                    metamessage: \"For some Reason an Error occured. Cannot process response.\",\n                    hasMetaError: true,\n                })  \n            }\n        }).catch(error => {\n            this.setState({\n                metamessage: \"For some Reason an Error occured. Is the Webserver up?\",\n                hasMetaError: true,\n            })\n        })\n    }\n\n    /*\n    perpareMeta will turn the json response into a format so that the pieChart can be rendered.\n    */\n    prepareMeta(meta) {\n        try {\n            var prep = []\n            for (let key in meta) {\n                if (key !== \"Website\") {\n                    prep.push([key, meta[key]])\n                }\n            }\n            return prep\n        } catch (error) {\n\n        }\n    }\n\n    /*\n    Get the color of the pill for the status by the is actuall status. \n    */\n    getColorByStatus(lstatus) {\n        console.log(\"here\", lstatus)\n        if (lstatus === \"Finished\") {\n            return \"badge badge-pill badge-success\"\n        } else if (lstatus === \"CrawlerError\" || lstatus === \"Failed\") {\n            return \"badge badge-pill badge-danger\"\n        } else if (lstatus === \"Undone\") {\n            return \"badge badge-pill badge-warning\"\n        } else if (lstatus === \"Processing\") {\n            return \"badge badge-pill badge-info\"\n        } else if (lstatus === \"SendToCrawler\") {\n            return \"badge badge-pill badge-dark\"\n        } else if (lstatus === \"Saving\") {\n            return \"badge badge-pill badge-primary\"\n        } else {\n            return \"badge badge-pill badge-secondary\"\n        }\n    }\n\n    render() {\n        const {\n            meta,\n            metamessage,\n            hasMetaError\n        } = this.state\n        var readymetaAnalyser = this.prepareMeta(meta[\"Analyser\"])\n        var readymetaCrawler = this.prepareMeta(meta[\"Crawler\"])\n        console.log(readymetaAnalyser)\n        return (\n            <div>\n                <hr></hr>\n                <p>Analyser Tasks:</p>\n                {\n                    readymetaAnalyser.length > 0 ? readymetaAnalyser.map(item => (\n                        <span class={this.getColorByStatus(item[0])} style={{marginRight: 10}}> {item[0]}:  {item[1]} </span>\n                    )): null\n                }\n                <hr></hr>\n                <p>Cralwer Tasks:</p>\n                {\n                    readymetaCrawler.length > 0 ? readymetaCrawler.map(item => (\n                        <span class={this.getColorByStatus(item[0])} style={{marginRight: 10}}> {item[0]}:  {item[1]} </span>\n                    )): null\n                }\n                <hr></hr>\n                <br></br>\n                { \n                    hasMetaError ? \n                            <div class=\"alert alert-danger\">\n                                { metamessage }\n                            </div>\n                            : \n                            <p>\n                                <div>\n                                    <PieChart colors={[\"#dc3545\", \"#28a745\", \"#17a2b8\", \"#ffc107\"]} download={{background: \"#fff\"}} width=\"100%\" height=\"150px\" data={ readymetaCrawler } />  \n                                    <br></br>\n                                    <PieChart colors={[\"#dc3545\", \"#28a745\", \"#17a2b8\",\"#007bff\", \"#343a40\", \"#ffc107\"]} download={{background: \"#fff\"}} width=\"100%\" height=\"250px\" data={ readymetaAnalyser } />\n                                </div>\n                            </p>\n                }\n            </div>\n        )\n    }\n\n}","//React standard\nimport React from 'react';\nimport Axios from 'axios';\n\n//Javascript\nimport SearchBar from './searchbar.js';\nimport ControlGraph from './metagraph.js'\n\nexport default class Controls extends React.Component {\n\n    DROPITENDPOINT = \"http://0.0.0.0:8081/controller/v1/dropit\"\n    CHANGESTATUS = \"http://0.0.0.0:8081/controller/v1/changestate\"\n    STATUSENDPOINT = \"http://0.0.0.0:8081/controller/v1/status\"\n    AREYOUTHERE = \"http://0.0.0.0:8081/areyouthere\"\n\n    state = {\n        message: \"\",\n        haserror: false,\n        showmessage: false,\n\n        //status\n        status: [],\n        statusmessage: \"\",\n        hasstatuserror: false,\n\n        //changestatus\n        changestatusmessage: \"\",\n        changestatushasMessage: false,\n        changestatushasErrorMessage: false,\n\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.dropIt = this.dropIt.bind(this);\n        this.areyouthere = this.areyouthere.bind(this);\n        this.submitStatusToWebserver = this.submitStatusToWebserver.bind(this);\n        this.getColorByStatus = this.getColorByStatus.bind(this);\n        this.interval = 0;\n    }\n\n    componentDidMount() {\n        this.getStatus()\n        this.interval = setInterval(() => {\n            try {\n                this.getStatus()\n                this.setState({\n                    message: undefined,\n                    haserror: false,\n                    showmessage: false,\n                    changestatushasMessage: false,\n                    changestatushasErrorMessage: false,\n                })\n            } catch(error) {\n                console.log(\"cannot clear state.\")\n            }\n        }, 4500)\n    }\n\n    /*\n    Will unmount any component at a given point.\n    */\n    componentWillUnmount() {\n        clearInterval(this.interval)\n    }\n\n    /*\n    Will fetch the status of the services.\n    */\n    getStatus() {\n        try{\n            Axios.get(this.STATUSENDPOINT).then( res => {\n                const response = res.data;\n                this.setState({\n                    status: [response],\n                    statusmessage: \"\",\n                    hasstatuserror: false,\n                })\n            }).catch(error => {\n                this.setState({\n                    status: [],\n                    statusmessage: \"Can not retrieve the status. Is the Webserver up?\",\n                    hasstatuserror: true,\n                })\n            })\n        } catch (error) {\n\n        }\n    }\n\n\n\n    /*\n    dropIt will send a droptable to the webserver which will drop the table.\n    */\n    dropIt() {\n        Axios.get(this.DROPITENDPOINT).then( res => {\n            const response = res.data;\n            try {\n                this.setState({\n                    message: response.Message,\n                    haserror: false,\n                    showmessage: true,\n                })\n            } catch (error) {\n                this.setState({\n                    message: \"Cannot read the response for DropTable\",\n                    haserror: true,\n                    showmessage: true,\n                })\n            }\n        }).catch(error => {\n            this.setState({\n                message: \"An error occured while trying to drop the table. Is the Database online aswell as the Webserver?\",\n                haserror: true,\n                showmessage: true,\n            })\n            console.log(error)\n        })\n    }\n\n    /*\n    areyouthere will send a areyouthere to the webserver which will response incase the webserver is online.\n    */\n    areyouthere() {\n        console.log(\"dropit\");\n        Axios.get(this.AREYOUTHERE).then(res => {\n            const response = res.data;\n            try {\n                this.setState({\n                    message: response.Message + \" 🤩\",\n                    haserror: false,\n                    showmessage: true,\n                })\n            } catch (error) {\n                this.setState({\n                    message: \"Cannot read the response for are you there\",\n                    haserror: true,\n                    showmessage: true,\n                })\n            }\n        }).catch(error => {\n            this.setState({\n                message: \"Seems like the webserver is down. 😭\",\n                haserror: true,\n                showmessage: true,\n            })\n        })\n    }\n\n    /*\n    Submit the Status changes to the Webserver.\n    */\n    submitStatusToWebserver(target, operation) {\n        try{\n            Axios.post(this.CHANGESTATUS,\n                JSON.stringify({\n                \"target\": target,\n                \"operation\": operation\n                })).then(response => {\n                    const chuncks = response.data\n                    if (chuncks.Status !== undefined) {\n                        this.setState({\n                            changestatusmessage: chuncks.Status,\n                            changestatushasMessage: true,\n                            changestatushasErrorMessage: false,\n                        })\n                    } else {\n                        this.setState({\n                            changestatusmessage: \"Status of the Crawler or Analyser is unknown!\",\n                            changestatushasMessage: true,\n                            changestatushasErrorMessage: true,\n                        })\n                    }\n                }).catch(error => {\n                    this.setState({\n                        changestatusmessage: \"An Erroc occured. Error: \" + error,\n                        changestatushasMessage: true,\n                        changestatushasErrorMessage: true,\n                    })\n                });\n        } catch(error) {\n            console.log(\"An error occured: \" + error)\n        }\n    }\n\n\n    /*\n    Get the color of the pill for the status by the is actuall status.\n    */\n    getColorByStatus(lstatus) {\n        if (lstatus === \"Running\") {\n            return \"badge badge-pill badge-success\"\n        } else if (lstatus === \"Stop\") {\n            return \"badge badge-pill badge-danger\"\n        } else if (lstatus === \"Paused\") {\n            return \"badge badge-pill badge-warning\"\n        } else if (lstatus === \"Idle\") {\n            return \"badge badge-pill badge-info\"\n        } else {\n            return \"badge badge-pill badge-dark\"\n        }\n    }\n\n    render() {\n        const {\n            message,\n            haserror,\n            showmessage,\n            status,\n            statusmessage,\n            hasstatuserror,\n            changestatusmessage,\n            changestatushasMessage,\n            changestatushasErrorMessage,\n        } = this.state\n        var AnalyserStatus = status.map(item => item[\"Analyser\"])\n        var CrawlerStatus = status.map(item => item[\"Crawler\"])\n        return (\n          <div>\n            <SearchBar></SearchBar>\n                <div class=\"body\">\n                    <p>Controls</p>\n                    {hasstatuserror ?\n                        <div class=\"alert alert-danger\"> {statusmessage} </div>\n                        :\n                        <div>\n                            <span class={this.getColorByStatus(AnalyserStatus[0])}> Analyser:  { AnalyserStatus }</span>\n                            <span style={{color: \"#d5d8dc\"}}>   </span>\n                            <span class={this.getColorByStatus(CrawlerStatus[0])}> Crawler: { CrawlerStatus }</span>\n                            <span style={{color: \"#d5d8dc\"}}>   </span>\n                        </div>\n                    }\n                    <hr></hr>\n                    <p>\n                        Current Systemload\n                        <ControlGraph></ControlGraph>\n                    </p>\n                    <hr></hr>\n                    <p>\n                        Servicemanager<br></br><br></br>\n                            {\n                                //General Messages\n                            showmessage ?\n                            <div style={{textAlign: \"center\"}} class={haserror ? \"alert alert-danger\" : \"alert alert-success\"} role=\"alert\">\n                                {message}\n                            </div>\n                            : null\n                            }\n\n                            {\n                                // Change Status Message.\n                            changestatushasMessage ?\n                            <div style={{textAlign: \"center\"}} class={changestatushasErrorMessage ? \"alert alert-danger\" : \"alert alert-success\"} role=\"alert\">\n                                {changestatusmessage}\n                            </div>\n                            : null\n                            }\n                        <div class=\"alert alert-dark\" role=\"alert\">\n                            <h5 class=\"alert-heading\">General</h5>\n                            <p>Control all services of Sherlock Gopher.</p>\n                            <hr></hr>\n                            <button onClick={() => this.submitStatusToWebserver(\"All\", \"Stop\")} type=\"button\" class=\"btn btn-danger\">Stop</button>\n                            <span style={{color: \"#d5d8dc\"}}>   </span>\n                            <button onClick={() => this.submitStatusToWebserver(\"All\", \"Pause\")} type=\"button\" class=\"btn btn-primary\">Pause</button>\n                            <span style={{color: \"#d5d8dc\"}}>   </span>\n                            <button onClick={() => this.submitStatusToWebserver(\"All\", \"Resume\")} type=\"button\" class=\"btn btn-success\">Resume</button>\n                            <span style={{color: \"#d5d8dc\"}}>   </span>\n                            <hr></hr>\n                            <p>Clear the Queue of all services</p>\n                            <button onClick={() => this.submitStatusToWebserver(\"All\", \"Clean\")} type=\"button\" class=\"btn btn-info\">Clear Queue</button>\n                            <span style={{color: \"#d5d8dc\"}}>   </span>\n                            <hr></hr>\n                            <p>Check with one click whether or not the webserver is alive.</p>\n                            <button onClick={this.areyouthere} type=\"submit\" class=\"btn btn-secondary\">Are you there?</button>\n                            <hr></hr>\n                            <p>Delete the current Neo4J-Database.</p>\n                            <button onClick={this.dropIt} type=\"submit\" class=\"btn btn-danger\">Drop it!</button>\n                        </div>\n                        <hr></hr>\n                        <div class=\"alert alert-dark\" role=\"alert\">\n                            <h5 class=\"alert-heading\">Analyser</h5>\n                            <p>Control the Analyser.</p>\n                            <hr></hr>\n                            <button onClick={() => this.submitStatusToWebserver(\"Analyser\", \"Stop\")} type=\"button\" class=\"btn btn-danger\">Stop</button>\n                            <span style={{color: \"#d5d8dc\"}}>   </span>\n                            <button onClick={() => this.submitStatusToWebserver(\"Analyser\", \"Pause\")} type=\"button\" class=\"btn btn-primary\">Pause</button>\n                            <span style={{color: \"#d5d8dc\"}}>   </span>\n                            <button onClick={() => this.submitStatusToWebserver(\"Analyser\", \"Resume\")} type=\"button\" class=\"btn btn-success\">Resume</button>\n                            <span style={{color: \"#d5d8dc\"}}>   </span>\n                            <hr></hr>\n                            <p>Clear the Queue of the Analyser-Service</p>\n                            <button onClick={() => this.submitStatusToWebserver(\"Analyser\", \"Clean\")} type=\"button\" class=\"btn btn-info\">Clear Queue</button>\n                            <span style={{color: \"#d5d8dc\"}}>   </span>\n                        </div>\n                        <hr></hr>\n                        <div class=\"alert alert-dark\" role=\"alert\">\n                            <h5 class=\"alert-heading\">Crawler</h5>\n                            <p>Control the Crawler.</p>\n                            <hr></hr>\n                            <button onClick={() => this.submitStatusToWebserver(\"Crawler\", \"Stop\")} type=\"button\" class=\"btn btn-danger\">Stop</button>\n                            <span style={{color: \"#d5d8dc\"}}>   </span>\n                            <button onClick={() => this.submitStatusToWebserver(\"Crawler\", \"Pause\")} type=\"button\" class=\"btn btn-primary\">Pause</button>\n                            <span style={{color: \"#d5d8dc\"}}>   </span>\n                            <button onClick={() => this.submitStatusToWebserver(\"Crawler\", \"Resume\")} type=\"button\" class=\"btn btn-success\">Resume</button>\n                            <span style={{color: \"#d5d8dc\"}}>   </span>\n                            <hr></hr>\n                            <p>Clear the Queue of the Crawler-Service</p>\n                            <button onClick={() => this.submitStatusToWebserver(\"Crawler\", \"Clean\")} type=\"button\" class=\"btn btn-info\">Clear Queue</button>\n                            <span style={{color: \"#d5d8dc\"}}>   </span>\n                        </div>\n                    </p>\n                </div>\n          </div>\n        )\n      }\n}\n","import React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nimport SearchBar from './searchbar.js';\n\nimport './assets/css/App.css'\n\nexport default class ScriptingAPI extends React.Component {\n    render() {\n        return (\n          <div>\n            \n              <SearchBar></SearchBar>\n              <div class=\"body\">\n                <p>Scripting API</p> \n                <hr></hr>\n                <ul class=\"list-group\" style={{color: \"black\"}}>\n                  <p><h4>General</h4></p>\n                  <li class=\"list-group-item\"><a href=\"#areyouthere\">/areyouthere</a></li>\n                </ul> \n                <br></br>\n                <ul class=\"list-group\" style={{color: \"black\"}}>\n                  <p><h4>Graph</h4></p>\n                  <li class=\"list-group-item\"><a href=\"#graphmeta\">/meta</a></li>\n                  <li class=\"list-group-item\"><a href=\"#graphall\">/all</a></li>\n                  <li class=\"list-group-item\"><a href=\"#graphalloptimized\">/alloptimized</a></li>\n                  <li class=\"list-group-item\"><a href=\"#graphpos\">/performenceofsites</a></li>\n                  <li class=\"list-group-item\"><a href=\"#graphdos\">/detailsofnode</a></li>\n                  <li class=\"list-group-item\"><a href=\"#graphsearch\">/search</a></li>\n                </ul>\n                <br></br> \n                <ul class=\"list-group\" style={{color: \"black\"}}>\n                  <p><h4>Monitor</h4></p>\n                  <li class=\"list-group-item\"><a href=\"#monitormeta\">/meta</a></li>\n                </ul> \n                <br></br>\n                <ul class=\"list-group\" style={{color: \"black\"}}>\n                  <p><h4>Controller</h4></p>\n                  <li class=\"list-group-item\"><a href=\"#controllerchangestate\">/changestate</a></li>\n                  <li class=\"list-group-item\"><a href=\"#controllerstatus\">/status</a></li>\n                  <li class=\"list-group-item\"><a href=\"#controllerdropit\">/dropit</a></li>\n                  </ul>\n                <br></br>\n                <h3>General</h3><hr></hr>\n\n                <div id=\"areyouthere\" style={{backgroundColor: \"#e5e5e5\"}}  class=\"alert alert-dark\" role=\"alert\">\n                  <h4 class=\"alert-heading\"># /areyouthere</h4>\n                  <hr></hr>\n                  <p>\n                  <ul class=\"list-group\" style={{color: \"black\"}}>\n                    <li class=\"list-group-item\"><b>Address:</b> [Basicaddress]/areyouthere</li>\n                    <li class=\"list-group-item\"><b>HTTP/s Methods:</b> <span class=\"badge badge-pill badge-info\">GET</span></li>\n                    <li class=\"list-group-item\"><b>Description:</b> Will send you a \"yes i am here\" as json to respond to the \"ping\".</li>\n                  </ul>\n                  </p>\n                  <hr></hr>\n                  <p class=\"mb-0\">\n                    <p>Response: </p>\n                    <SyntaxHighlighter language=\"javascript\" style={docco}>\n                      {JSON.stringify({\n                          \"Message\": \"Yes i am here!\"\n                      })}\n                    </SyntaxHighlighter>\n                  </p>\n                </div>\n\n\n                <h3>Graph</h3><hr></hr>\n                <div id=\"graphmeta\" style={{backgroundColor: \"#e5e5e5\"}}  class=\"alert alert-dark\" role=\"alert\">\n                  <h4 class=\"alert-heading\"># /graph/v1/meta</h4>\n                  <hr></hr>\n                  <p>\n                  <ul class=\"list-group\" style={{color: \"black\"}}>\n                    <li class=\"list-group-item\"><b>Address:</b> [Basicaddress]/graph/v1/meta</li>\n                    <li class=\"list-group-item\"><b>HTTP/s Methods:</b> <span class=\"badge badge-pill badge-info\">GET</span></li>\n                    <li class=\"list-group-item\"><b>Description:</b> Will return some meta information of the Neo4J db such as the amount of nodes or number of relationships.</li>\n                  </ul>\n                  </p>\n                  <hr></hr>\n                  <p class=\"mb-0\">\n                    <p>Response: </p>\n                    <SyntaxHighlighter language=\"javascript\" style={docco}>\n                      {JSON.stringify([\n                          {\n                              \"amountofimages\": 18\n                          },\n                          {\n                              \"amountofsheets\": 10\n                          },\n                          {\n                              \"amountofjs\": 20\n                          } ])}\n                    </SyntaxHighlighter>\n                  </p>\n                </div>\n                \n                \n                <div id=\"graphall\" style={{backgroundColor: \"#e5e5e5\"}}  class=\"alert alert-dark\" role=\"alert\">\n                  <h4 class=\"alert-heading\"># /graph/v1/all</h4>\n                  <hr></hr>\n                  <p>\n                  <ul class=\"list-group\" style={{color: \"black\"}}>\n                    <li class=\"list-group-item\"><b>Address:</b> [Basicaddress]/graph/v1/all</li>\n                    <li class=\"list-group-item\"><b>HTTP/s Methods:</b> <span class=\"badge badge-pill badge-info\">GET</span></li>\n                    <li class=\"list-group-item\"><b>Description:</b> Will return json which contains all nodes and their relationships to other nodes.</li>\n                  </ul>\n                  </p>\n                  <hr></hr>\n                  <p class=\"mb-0\">\n                    <p>Response: </p>\n                    <SyntaxHighlighter language=\"javascript\" style={docco}>\n                      {JSON.stringify([\n                        {\n                          \"Destination\": \"www.example.com/6\",\n                          \"DestinationType\": \"Javascript\",\n                          \"Relationship\": \"Requires\",\n                          \"Source\": \"www.example.com/23\",\n                          \"SourceType\": \"HTML\"\n                      },\n                      {\n                          \"Destination\": \"www.example.com/7\",\n                          \"DestinationType\": \"CSS\",\n                          \"Relationship\": \"Requires\",\n                          \"Source\": \"www.example.com/79\",\n                          \"SourceType\": \"HTML\"\n                      }\n                      ])}\n                    </SyntaxHighlighter>\n                  </p>\n                </div>\n                \n                \n                <div id=\"graphalloptimized\" style={{backgroundColor: \"#e5e5e5\"}}  class=\"alert alert-dark\" role=\"alert\">\n                  <h4 class=\"alert-heading\">/graph/v1/alloptimized</h4>\n                  <hr></hr>\n                  <p>\n                  <ul class=\"list-group\" style={{color: \"black\"}}>\n                    <li class=\"list-group-item\"><b>Address:</b> [Basicaddress]/graph/v1/alloptimized</li>\n                    <li class=\"list-group-item\"><b>HTTP/s Methods:</b> <span class=\"badge badge-pill badge-info\">GET</span></li>\n                    <li class=\"list-group-item\"><b>Description:</b> \n                    Will return json which contains all nodes and their relationships to other nodes but optimized for the react frontend.\n                    </li>\n                  </ul>\n                  </p>\n                  <hr></hr>\n                  <p class=\"mb-0\">\n                    <p>Response: </p>\n                    <SyntaxHighlighter language=\"javascript\" style={docco}>\n                      {JSON.stringify({\n                          \"links\": [\n                            {\n                                \"color\": \"#08206A\",\n                                \"label\": \"Links\",\n                                \"source\": \"www.example.com/43\",\n                                \"target\": \"www.example.com/0\"\n                            },\n                            {\n                                \"color\": \"#08206A\",\n                                \"label\": \"Links\",\n                                \"source\": \"www.example.com/41\",\n                                \"target\": \"www.example.com/0\"\n                            }],\n                            \"nodes\": [\n                            {\n                                \"color\": \"#7CA9EF\",\n                                \"id\": \"www.example.com/43\"\n                            },\n                            {\n                                \"color\": \"#7CA9EF\",\n                                \"id\": \"www.example.com/0\"\n                            },\n                            {\n                                \"color\": \"#7CA9EF\",\n                                \"id\": \"www.example.com/41\"\n                            }] \n                      })}\n                    </SyntaxHighlighter>\n                  </p>\n                </div>\n                \n                <div id=\"graphpos\" style={{backgroundColor: \"#e5e5e5\"}}  class=\"alert alert-dark\" role=\"alert\">\n                  <h4 class=\"alert-heading\"># /performenceofsites</h4>\n                  <hr></hr>\n                  <p>\n                  <ul class=\"list-group\" style={{color: \"black\"}}>\n                    <li class=\"list-group-item\"><b>Address:</b> [Basicaddress]/graph/v1/performenceofsites</li>\n                    <li class=\"list-group-item\"><b>HTTP/s Methods:</b> <span class=\"badge badge-pill badge-info\">GET</span></li>\n                    <li class=\"list-group-item\"><b>Description:</b> Will return a list of performence indicators like statuscode and RTT.</li>\n                  </ul>\n                  </p>\n                  <hr></hr>\n                  <p class=\"mb-0\">\n                    <p>Response: </p>\n                    <SyntaxHighlighter language=\"javascript\" style={docco}>\n                      {JSON.stringify([\n                        {\n                          \"Address\": \"www.example.com/0\",\n                          \"ResponseTime\": \"522\",\n                          \"Status\": \"409\"\n                      },\n                      {\n                          \"Address\": \"www.example.com/1\",\n                          \"ResponseTime\": \"1034\",\n                          \"Status\": \"246\"\n                      }\n                      ])}\n                    </SyntaxHighlighter>\n                  </p>\n                </div>\n                \n                <div id=\"graphdos\" style={{backgroundColor: \"#e5e5e5\"}} class=\"alert alert-dark\" role=\"alert\">\n                  <h4 class=\"alert-heading\"># /detailsofnode</h4>\n                  <p>\n                  <hr></hr>\n                  <ul class=\"list-group\" style={{color: \"black\"}}>\n                    <li class=\"list-group-item\"><b>Address:</b> [Basicaddress]/graph/v1/detailsofnode</li>\n                    <li class=\"list-group-item\"><b>HTTP/s Methods:</b> <span class=\"badge badge-pill badge-warning\">POST</span></li>\n                    <li class=\"list-group-item\"><b>Description:</b> Will send you a \"yes i am here\" as json to respond to the \"ping\".</li>\n                  </ul>\n                  </p>\n                  <hr></hr>\n                  <p class=\"mb-0\">\n                  <p>Request: </p>\n                    <SyntaxHighlighter language=\"javascript\" style={docco}>\n                      {JSON.stringify({\n                          \"url\": \"www.example.com/imprint\"\n                      })}\n                    </SyntaxHighlighter>\n                  <p>Response: </p>\n                    <SyntaxHighlighter language=\"javascript\" style={docco}>\n                      {JSON.stringify({\n                          \"www.example.com/imprint\": {\n                                \"Accept-Ranges\": \"bytes\",\n                                \"Address\": \"1\",\n                                \"Age\": \"12\",\n                                \"Allow\": \"GET, HEAD\",\n                                \"Cache-Control\": \"max-age=3600\",\n                                \"Connection\": \"close\",\n                                \"Content-Encoding\": \"gzip\",\n                                \"Content-Language\": \"de\",\n                                \"Content-Location\": \"/imprint\",\n                                \"Content-MD5\": \"Q2hlY2sgSW50ZWdyaXR5IQ==\",\n                                \"Content-Type\": \"text/html; charset=utf-8\",\n                            }\n                      })}\n                    </SyntaxHighlighter>\n                  </p>\n                </div>\n                \n                <div id=\"graphsearch\" style={{backgroundColor: \"#e5e5e5\"}} class=\"alert alert-dark\" role=\"alert\">\n                  <h4 class=\"alert-heading\"># /search</h4>\n                  <p>\n                  <ul class=\"list-group\" style={{color: \"black\"}}>\n                    <li class=\"list-group-item\"><b>Address:</b> [Basicaddress]/graph/v1/search</li>\n                    <li class=\"list-group-item\"><b>HTTP/s Methods:</b> <span class=\"badge badge-pill badge-warning\">POST</span></li>\n                    <li class=\"list-group-item\"><b>Description:</b> Will return a message containing information about the request like Fine or an error containing a message.</li>\n                  </ul>\n                  </p>\n                  <hr></hr>\n                  <p class=\"mb-0\">\n                  <p>Request: </p>\n                    <SyntaxHighlighter language=\"javascript\" style={docco}>\n                      {JSON.stringify({\n                          \"url\": \"www.example.com\"\n                      })}\n                    </SyntaxHighlighter>\n                  <p>Response: </p>\n                    <SyntaxHighlighter language=\"javascript\" style={docco}>\n                      {JSON.stringify({\n                          \"Status\": \"Fine\"\n                      })}\n                    </SyntaxHighlighter>\n                    </p>\n                </div>\n\n                <h3>Monitor</h3>\n                <hr></hr>\n                <div id=\"monitormeta\" style={{backgroundColor: \"#e5e5e5\"}} class=\"alert alert-dark\" role=\"alert\">\n                  <h4 class=\"alert-heading\"># /meta</h4>\n                  <p>\n                  <ul class=\"list-group\" style={{color: \"black\"}}>\n                    <li class=\"list-group-item\"><b>Address:</b> [Basicaddress]/monitor/v1/meta</li>\n                    <li class=\"list-group-item\"><b>HTTP/s Methods:</b> <span class=\"badge badge-pill badge-info\">GET</span></li>\n                    <li class=\"list-group-item\"><b>Description:</b> Will return meta information about the services (Analyser and Crawler)..</li>\n                  </ul>\n                  </p>\n                  <hr></hr>\n                  <p class=\"mb-0\">\n                    <p>Response: </p>\n                    <SyntaxHighlighter language=\"javascript\" style={docco}>\n                      {JSON.stringify({\n                          \"Crawler\":{\n                            \"Website\":    45,\n                            \"Undone\":     9,\n                            \"Processing\": 25,\n                            \"Finished\":   10,\n                            \"Failed\":     1,\n                          },\n                          \"Analyser\":{\n                            \"Website\":       45,\n                            \"Undone\":        5,\n                            \"Processing\":    25,\n                            \"CrawlerError\":  0,\n                            \"Saving\":        5,\n                            \"SendToCrawler\": 5,\n                            \"Finished\":      5,\n                          }\n                      })}\n                    </SyntaxHighlighter>\n                  </p>\n                </div>\n                <h3>Controller</h3>\n                <hr></hr>\n                <div id=\"controllerchangestate\" style={{backgroundColor: \"#e5e5e5\"}} class=\"alert alert-dark\" role=\"alert\">\n                  <h4 class=\"alert-heading\"># /changestate</h4>\n                  <p>\n                  <ul class=\"list-group\" style={{color: \"black\"}}>\n                    <li class=\"list-group-item\"><b>Address:</b> [Basicaddress]/controller/v1/changestate</li>\n                    <li class=\"list-group-item\"><b>HTTP/s Methods:</b> <span class=\"badge badge-pill badge-warning\">POST</span></li>\n                    <li class=\"list-group-item\"><b>Description:</b> Will change the state of various services.</li>\n                    <li class=\"list-group-item\"><b>Operations:</b> Clean, Stop, Pause, Resume</li>\n                    <li class=\"list-group-item\"><b>Targets:</b> Crawler, Analyser, All</li>\n                  </ul>\n                  </p>\n                  <hr></hr>\n                  <p class=\"mb-0\">\n                    <p>Request: </p>\n                      <SyntaxHighlighter language=\"javascript\" style={docco}>\n                        {JSON.stringify({\n                              \"operation\": \"clean\",\n                              \"target\": \"crawler\"\n                          })}\n                      </SyntaxHighlighter>\n                    <p>Response: </p>\n                      <SyntaxHighlighter language=\"javascript\" style={docco}>\n                        {JSON.stringify({\n                            \"Status\": \"Fine\"\n                        })}\n                      </SyntaxHighlighter>\n                  </p>\n                </div>\n                \n                <div id=\"controllerstatus\" style={{backgroundColor: \"#e5e5e5\"}} class=\"alert alert-dark\" role=\"alert\">\n                  <h4 class=\"alert-heading\"># /status</h4>\n                  <p>\n                  <ul class=\"list-group\" style={{color: \"black\"}}>\n                    <li class=\"list-group-item\"><b>Address:</b> [Basicaddress]/controller/v1/status</li>\n                    <li class=\"list-group-item\"><b>HTTP/s Methods:</b> <span class=\"badge badge-pill badge-info\">GET</span></li>\n                    <li class=\"list-group-item\"><b>Description:</b> Will return the status of the crawler and analyser.</li>\n                  </ul>\n                  </p>\n                  <hr></hr>\n                  <p class=\"mb-0\">\n                    <p>Response: </p>\n                    <SyntaxHighlighter language=\"javascript\" style={docco}>\n                      {JSON.stringify(   {\n                            \"Analyser\": \"Running\",\n                            \"Crawler\": \"Paused\"\n                        })}\n                    </SyntaxHighlighter>\n                  </p>\n                </div>\n                \n                <div id=\"controllerdropit\" style={{backgroundColor: \"#e5e5e5\"}} class=\"alert alert-dark\" role=\"alert\">\n                  <h4 class=\"alert-heading\"># /dropit</h4>\n                  <p>\n                  <ul class=\"list-group\" style={{color: \"black\"}}>\n                    <li class=\"list-group-item\"><b>Address:</b> [Basicaddress]/controller/v1/dropit</li>\n                    <li class=\"list-group-item\"><b>HTTP/s Methods:</b> <span class=\"badge badge-pill badge-info\">GET</span></li>\n                    <li class=\"list-group-item\"><b>Description:</b> Will drop the database.</li>\n                  </ul>\n                  </p>\n                  <hr></hr>\n                  <p class=\"mb-0\">\n                    <p>Response: </p>\n                    <SyntaxHighlighter language=\"javascript\" style={docco}>\n                      {JSON.stringify(   {\n                          \"Message\": \"Dropped the table.\"\n                      })}\n                    </SyntaxHighlighter>\n                  </p>\n                </div>\n          </div>\n        </div>\n        )\n      }\n}","/*\nWill represent the details about a node.\n*/\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport React from \"react\";\nimport axios from 'axios';\n\nimport SearchBar from './searchbar.js';\n\nimport './assets/css/nodedetails.css'\n\nexport default class Nodedetails extends React.Component {\n\n    state = {\n        value: \"\",\n        reponsegoterror: false,\n        items: [],\n        showComponent: false,\n        searchurl: undefined,\n    }\n    \n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.serverRequest = this.serverRequest.bind(this);\n        this.getPrettyResponse = this.getPrettyResponse.bind(this);\n        this.makeClickableURL = this.makeClickableURL.bind(this);\n        this.isVerified = this.isVerified.bind(this);\n        this.getAdvancedNodeInformation = this.getAdvancedNodeInformation.bind(this);\n    }\n    \n    /*\n    Will make the Request to the webserver.\n    */\n    serverRequest(submiturl) {\n        axios.post(\"http://0.0.0.0:8081/graph/v1/detailsofnode\",\n          JSON.stringify({\n            url: submiturl\n        })).then(response => {\n            const chuncks = response.data\n            if (chuncks.Message !== undefined) {\n                this.setState({\n                    showComponent: true,\n                    reponsegoterror: true,\n                    items: chuncks,\n                    searchurl: undefined\n                })\n            } else {\n                this.setState({\n                    searchurl: submiturl, \n                    showComponent: true,\n                    reponsegoterror: false,\n                    items: chuncks\n                })\n            }\n        }).catch(response => { //TODO\n            const chuncks = response.data\n            console.log(response)\n            this.setState({\n                searchurl: undefined,\n                showComponent: true,\n                reponsegoterror: true,\n                items: chuncks\n            })\n        });\n    }\n    \n    /*\n    handleChange will handle the Change of the input-field\n    */\n    handleChange(event) {   \n        this.setState(\n          { \n            value: event.target.value,\n            showComponent: false,\n            reponsegoterror: false,\n            items: undefined\n          }\n        );  \n    }\n    \n    /*\n    handleSubmit will handle the submitted url.\n    */\n    handleSubmit(event) {\n        event.preventDefault();\n        this.serverRequest(this.state.value)\n    }\n\n    /*\n    isVerified will check whether or not a node is verified and return the color for the badge.\n    */\n    isVerified(status) {\n        //TODO unused\n        if (status !== 'verified') {\n            return \"color: red\"\n        } else {\n            return \"color: green\" \n        }\n    }\n\n    /*\n    makeClickableURL will turn a URL in a clickable URL.\n    */\n    makeClickableURL(lurl) {\n        if (lurl.startsWith(\"http://\") || lurl.startsWith(\"https://\")) {\n          return lurl;\n        } else {\n          return \"http://\" + lurl\n        }\n      }\n\n    /*\n    getAdvancedNodeInformation will turn the given details about a node into a fitting-format to render it.\n    */\n    getAdvancedNodeInformation(instance) {\n        try {\n            let arr = [] \n            for (let key in instance) {\n                if (key !== \"Responsetime\" && key !== 'Status' && key !== 'Statuscode' && key !== 'Filetype' && key !== \"Address\") {\n                    arr.push([key, instance[key]])\n                }   \n            }\n            return arr\n        } catch (error) {\n            return null\n        }\n    }\n\n    /*\n    getPrettyResponse will prettify the response.\n    */\n    getPrettyResponse() {\n        if (this.state.reponsegoterror) {         \n            return (\n                    <div class=\"alert alert-warning\">\n                       {this.state.items.Message}\n                    </div>\n                )\n        } else { \n            if (this.state.searchurl !== undefined) {\n                const { items, searchurl } = this.state\n                var entries = this.getAdvancedNodeInformation(items[String(searchurl)])\n                console.log(entries)\n                try {\n                    return (\n                        <div class=\"alert alert-secondary\" role=\"alert\">\n                            <h4 class=\"alert-heading\">{items[String(searchurl)].Address}</h4>\n                            <hr></hr>\n                                Metainformation<br></br>\n                                <ul>\n                                    {items[String(searchurl)].Status !== undefined ? <li> <b>Status</b>: {items[String(searchurl)].Status}</li> : null}\n                                    {items[String(searchurl)].Responsetime !== undefined ? <li> <b>RTT</b>: {items[String(searchurl)].Responsetime}</li> : null}\n                                    {items[String(searchurl)].Statuscode !== undefined ? <li> <b>HTTP/s Responsecode:</b> {items[String(searchurl)].Statuscode}</li> : null}\n                                    {items[String(searchurl)].Filetype !== undefined ? <li> <b>Resourcetyp</b>: {items[String(searchurl)].Filetype}</li> : null}\n                                </ul>\n                            <hr></hr>\n                                Advanced information\n                                    <ul>\n                                        {\n                                            entries.length > 0 ? entries.map(item => (\n                                                <li><b>{item[0]}</b>: {item[1]}</li>\n                                            )): null\n                                        }\n                                    </ul>\n                            <hr></hr>\n                                <p class=\"mb-0\">\n                                    <a type=\"button\" href={this.makeClickableURL(searchurl)} class=\"btn btn-outline-dark\">Visit this page</a>\n                                    <span style={{color: \"#d5d8dc\"}}>   </span>\n                                </p>\n                        </div>\n                    )\n                } catch (error) {\n                    console.log(error)\n                    return (\n                        <div class=\"alert alert-danger\" role=\"alert\">\n                            A problem occured with the following address: <b>{searchurl}</b>.\n                        </div>\n                    )\n                }   \n            } else {\n                return (\n                    <div class=\"alert alert-danger\" role=\"alert\">\n                        An error occured! Please try to search for a different node!\n                    </div>\n                )\n            }\n        }\n    }\n    \n    render() {\n        return (\n            <div>\n                <SearchBar></SearchBar>\n                <div class=\"body\">\n                    <p>Node</p>  \n                    <hr></hr>\n                    <form onSubmit={this.handleSubmit}>\n                        <div  class=\"form-group\">\n                            <label for=\"exampleInputEmail1\">Enter a address and find the right node</label><br></br>\n                            <p class=\"informationForInput\">The search is case-sensitive so a space or wrong character can lead to an empty result!</p>\n                            <input class=\"form-control\" value={this.state.value} onChange={this.handleChange} name=\"url\" placeholder=\"Enter the address\" required></input>\n                        </div>\n                        <button type=\"submit\" class=\"btn btn-outline-dark btn-sm\">search</button>\n                    </form>\n                    <hr></hr>\n                    {this.state.showComponent ? this.getPrettyResponse() : null}\n                </div>\n         </div>\n        )\n    }\n}","/*\nWill represent the graph in the frontend.\n*/\n\n//React Standard\nimport 'bootstrap/dist/css/bootstrap.css';\nimport React from \"react\";\nimport ForceGraph3D from 'react-force-graph-3d';\nimport ForceGraph2D from 'react-force-graph-2d';\nimport SpriteText from \"three-spritetext\";\nimport Axios from 'axios';\n\n//Javascripts\nimport SearchBar from './searchbar.js';\n\n//Stylesheets\nimport './assets/css/App.css';\n\nexport default class NodeGraph extends React.Component {\n    \n    METAINFORMATION = \"http://0.0.0.0:8081/graph/v1/meta\"\n    ALLINFORMATIONPERFORMANCE = \"http://0.0.0.0:8081/graph/v1/alloptimized\"\n\n    state = {\n        //Show 2D or 3D\n        is2d: true,\n\n        seconds: 60,\n\n        //MetaInformation State\n        metaError: \"\",\n        metahasError: false,\n        showMetaError: false,\n\n        //Meta Data\n        metadata: [],\n\n        //Data State\n        dataError: \"\",\n        dataHasError: false,\n        showDataError: false,\n\n        //Data\n        responseData:[],\n        data: {\n            \"nodes\":[],\n            \"links\": []\n        },\n    }\n\n    constructor(props) {\n        super(props);\n        this.getMetaInformation = this.getMetaInformation.bind(this);\n        this.getGraphData = this.getGraphData.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.getGraph = this.getGraph.bind(this);\n        this.interval = 0;\n        this.timerInterval = 0;\n    }\n\n    /*\n    Fetch all Metainformation like number of nodes, etc.\n    */\n    getMetaInformation() {\n        Axios.get(\n            this.METAINFORMATION\n        ).then(res => {\n            const response = res.data\n            this.setState({\n                metadata: response,\n            })\n        }).catch(error => {\n            this.setState({\n                dataError: \"Cannot fetch the Metadata, Error: \" + String(error),\n                dataHasError: true,\n                showDataError: true,\n            })\n        })\n    }\n\n    /*\n    getGraphData will fetch the GraphData.\n    */\n    getGraphData() {\n        try {\n            Axios.get(\n                this.ALLINFORMATIONPERFORMANCE\n            ).then(res => {\n                const response = res.data\n                this.setState({\n                    data: response\n                })\n            }).catch(error => {\n                this.setState({\n                    metaError: \"Cannot fetch the graphdata, Error: \" + String(error),\n                    metahasError: true,\n                    showMetaError: true,\n                })\n            });\n        } catch (error) {\n            console.log(\"An error occured while trying to get the Metadata.\");\n        }\n    }\n\n    /*\n    componentDidMount will mount the component.\n    */\n    componentDidMount() {\n        this.interval = setTimeout(async () => {\n            try {\n                this.getMetaInformation()\n                this.getGraphData()\n                console.log(\"hallo\")\n            } catch (error) {\n                console.log(\"An error occured while trying to get the Metadata.\")\n                }\n        }, 100)  \n        this.interval = setInterval(async () => {\n            try {\n                this.getMetaInformation()\n                this.getGraphData()\n                this.setState({\n                    seconds: 60,\n                })\n            } catch (error) {\n                console.log(\"An error occured while trying to get the Metadata.\")\n                }\n        }, 60000) \n        this.timerInterval = setInterval(async () => {\n            try {\n                this.setState(({ seconds }) => ({\n                    seconds: seconds - 1\n                }))\n            } catch (error) {\n                console.log(\"An error occured in the timer function.\")\n                }\n        }, 1000)  \n    }\n\n    /*\n    componentWillUnmount will unmount the Component.\n    */\n    componentWillUnmount() {\n        clearInterval(this.ConstantInterval)\n    }\n\n    /*\n    handleChanges will handle a event so switch between 2D and 3D.\n    */\n    handleChange(event) {   \n        this.setState(\n          { \n            is2d: !this.state.is2d\n          }\n        );  \n    }\n    \n    /*\n    makeMetaDataIterable will format all data in the metadata array in a\n    way to perform .map on the new data.\n    */\n    makeMetaDataIterable(data) {\n        try {\n            let larray = []\n            for (let key in data) {\n                for (let entrie in data[key]) {\n                    larray.push([entrie, data[key][entrie]])\n                }\n            }\n            return larray\n        } catch (error) {\n            return []\n        }\n    }\n    \n    /*\n    getGraph will return the graph or a message.\n    */\n    getGraph(data, is2d) {\n        if (is2d && data[\"nodes\"] !== undefined && data[\"links\"] !== undefined) {\n            return (<ForceGraph2D\n            graphData={data}\n            nodeLabel=\"id\"\n            width={1145}\n            height={600}\n            linkDirectionalArrowLength={3.5}\n            linkDirectionalArrowRelPos={1}\n            linkLabel={\"label\"}\n            showNavInfo={false}\n        />)\n        } else if (!is2d && data[\"nodes\"] !== undefined && data[\"links\"] !== undefined) {\n            return (<ForceGraph3D \n                                showNavInfo={false}\n                                width={1145}\n                                height={600}\n                                backgroundColor={\"#f7f9f9\"}\n                                graphData={data}\n                                linkDirectionalArrowLength={1.5}\n                                linkDirectionalArrowRelPos={1}\n                                nodeThreeObject={node => {\n                                    const sprite = new SpriteText(node.id);\n                                    sprite.color = node.color;\n                                    sprite.textHeight = 8;\n                                    return sprite;\n                }} />)\n        } else {\n            return (\n                <div class=\"alert alert-warning\">No nodes in the Database or there is no connection</div>\n            )\n        }                 \n    }\n\n    render() {     \n        const {is2d, data, metaError, metahasError, showMetaError, metadata, seconds} = this.state\n        var finalmetadata = this.makeMetaDataIterable(metadata)\n        return (\n          <div>\n            \n              <SearchBar></SearchBar>\n              <div class=\"body\">\n                <p>\n                    <p>Metainformation</p>            \n                    {showMetaError && metahasError ? \n                        <div class=\"alert alert-danger\">\n                            {metaError}\n                        </div> \n                        : \n                        <div>\n                            { \n                            finalmetadata.map(item => (\n                                <span><span class=\"badge badge-pill badge-secondary\">{String(item[0]).toUpperCase()}: {item[1]} </span> <span style={{color: \"#d5d8dc\", display: \"None\"}}> | </span>\n                                </span>\n                                ))\n                            }\n                        </div>\n                        }\n                    <hr></hr>\n                    <div class=\"custom-control custom-switch\">\n                        <input onClick={this.handleChange} type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitches\"></input>\n                        <label class=\"custom-control-label\" for=\"customSwitches\">Switch to {!is2d ? \"2D\" : \"3D\"}</label>\n                        <span style={{color: \"#273746\"}}> | </span>\n                        <span style={{backgroundColor:\"#7CA9EF\"}} class=\"badge badge-pill badge-dark htmlnode\"> HTML </span> \n                        <span style={{color: \"#d5d8dc\"}}>   </span>\n                        <span style={{backgroundColor:\"#E891BC\"}}  class=\"badge badge-pill badge-success\"> Stylesheets </span>\n                        <span style={{color: \"#d5d8dc\"}}>   </span>\n                        <span style={{backgroundColor:\"#F0B85B\"}}  class=\"badge badge-pill badge-success\"> Javascript </span>\n                        <span style={{color: \"#d5d8dc\"}}>   </span>\n                        <span style={{backgroundColor:\"#85E196\"}}  class=\"badge badge-pill badge-warning\"> Images </span>\n                        <span style={{color: \"#273746\"}}> | </span>\n                        <span style={{backgroundColor:\"#08206A\"}}  class=\"badge badge-pill badge-danger\"> Links  &#10138;</span>\n                        <span style={{color: \"#d5d8dc\"}}>   </span>\n                        <span style={{backgroundColor:\"#24A144\"}}  class=\"badge badge-pill badge-danger\"> Requires &#10138;</span>\n                        <span style={{color: \"#d5d8dc\"}}>  </span>\n                        <span style={{backgroundColor:\"#99BA51\"}}  class=\"badge badge-pill badge-danger\"> Shows &#10138;</span>\n                        <span style={{color: \"#273746\"}}> | </span>\n                        <span class=\"badge badge-pill badge-info\"> Graph will automatically update in {seconds} sec.</span>\n                    </div>     \n                    <hr></hr>\n                </p>\n                    <div style={{margin: \"auto\",\n                                width: \"100%\",\n                                padding: \"10px\"}}>\n                        { \n                            this.getGraph(data, is2d)\n                        }\n                    </div>\n              </div>\n          </div>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\n// Import all Routes\nimport App from './App'; \nimport SitePerformence from './siteperformence.js';\nimport Controls from './controls.js';\nimport ScriptingAPI from './scriptingapi.js'\nimport Nodedetails from './nodedetails.js'\nimport NodeGraph from './graph.js'\n\n\nconst router = (\n  <Router>\n    <div>\n      <Route exact path=\"/\" component={App}  />\n      <Route  path=\"/Graph\" component={NodeGraph} />\n      <Route  path=\"/sitesperformence\" component={SitePerformence}  />\n      <Route  path=\"/nodedetails\" component={Nodedetails}  />\n      <Route  path=\"/controls\" component={Controls}  />\n\n      <Route  path=\"/scriptingapi\" component={ScriptingAPI}  />\n    </div>\n  </Router>\n)\n\n\nReactDOM.render(\n  router,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}