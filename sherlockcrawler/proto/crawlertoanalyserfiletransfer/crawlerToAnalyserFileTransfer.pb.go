// Code generated by protoc-gen-go. DO NOT EDIT.
// source: crawlerToAnalyserFileTransfer.proto

package crawlerproto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//
//UploadStatusCode gives information. the receiver sends a ok if he received all chunks.
type UploadStatusCode int32

const (
	UploadStatusCode_Ok     UploadStatusCode = 0
	UploadStatusCode_Failed UploadStatusCode = 1
)

var UploadStatusCode_name = map[int32]string{
	0: "Ok",
	1: "Failed",
}

var UploadStatusCode_value = map[string]int32{
	"Ok":     0,
	"Failed": 1,
}

func (x UploadStatusCode) String() string {
	return proto.EnumName(UploadStatusCode_name, int32(x))
}

func (UploadStatusCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6af6f45688fe9b43, []int{0}
}

//
//Chunk represents a chunk of a http response.
type Chunk struct {
	Content              []byte   `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
	TaskId               uint64   `protobuf:"varint,2,opt,name=TaskId,proto3" json:"TaskId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chunk) Reset()         { *m = Chunk{} }
func (m *Chunk) String() string { return proto.CompactTextString(m) }
func (*Chunk) ProtoMessage()    {}
func (*Chunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_6af6f45688fe9b43, []int{0}
}

func (m *Chunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chunk.Unmarshal(m, b)
}
func (m *Chunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chunk.Marshal(b, m, deterministic)
}
func (m *Chunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chunk.Merge(m, src)
}
func (m *Chunk) XXX_Size() int {
	return xxx_messageInfo_Chunk.Size(m)
}
func (m *Chunk) XXX_DiscardUnknown() {
	xxx_messageInfo_Chunk.DiscardUnknown(m)
}

var xxx_messageInfo_Chunk proto.InternalMessageInfo

func (m *Chunk) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Chunk) GetTaskId() uint64 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

//
//Infos represent all information in relation to the http response. it sends all information of a CrawlerTaskRequest that need to be sent once.
type Infos struct {
	TaskId               uint64         `protobuf:"varint,1,opt,name=TaskId,proto3" json:"TaskId,omitempty"`
	Address              string         `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
	Header               []*HeaderArray `protobuf:"bytes,3,rep,name=Header,proto3" json:"Header,omitempty"`
	StatusCode           int32          `protobuf:"varint,4,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	ResponseTime         int64          `protobuf:"varint,5,opt,name=ResponseTime,proto3" json:"ResponseTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Infos) Reset()         { *m = Infos{} }
func (m *Infos) String() string { return proto.CompactTextString(m) }
func (*Infos) ProtoMessage()    {}
func (*Infos) Descriptor() ([]byte, []int) {
	return fileDescriptor_6af6f45688fe9b43, []int{1}
}

func (m *Infos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Infos.Unmarshal(m, b)
}
func (m *Infos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Infos.Marshal(b, m, deterministic)
}
func (m *Infos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Infos.Merge(m, src)
}
func (m *Infos) XXX_Size() int {
	return xxx_messageInfo_Infos.Size(m)
}
func (m *Infos) XXX_DiscardUnknown() {
	xxx_messageInfo_Infos.DiscardUnknown(m)
}

var xxx_messageInfo_Infos proto.InternalMessageInfo

func (m *Infos) GetTaskId() uint64 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *Infos) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Infos) GetHeader() []*HeaderArray {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Infos) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *Infos) GetResponseTime() int64 {
	if m != nil {
		return m.ResponseTime
	}
	return 0
}

//
//HeaderArray consists of keys and values
type HeaderArray struct {
	Key                  string              `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	ValueArr             []*HeaderArrayValue `protobuf:"bytes,2,rep,name=ValueArr,proto3" json:"ValueArr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *HeaderArray) Reset()         { *m = HeaderArray{} }
func (m *HeaderArray) String() string { return proto.CompactTextString(m) }
func (*HeaderArray) ProtoMessage()    {}
func (*HeaderArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_6af6f45688fe9b43, []int{2}
}

func (m *HeaderArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeaderArray.Unmarshal(m, b)
}
func (m *HeaderArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeaderArray.Marshal(b, m, deterministic)
}
func (m *HeaderArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeaderArray.Merge(m, src)
}
func (m *HeaderArray) XXX_Size() int {
	return xxx_messageInfo_HeaderArray.Size(m)
}
func (m *HeaderArray) XXX_DiscardUnknown() {
	xxx_messageInfo_HeaderArray.DiscardUnknown(m)
}

var xxx_messageInfo_HeaderArray proto.InternalMessageInfo

func (m *HeaderArray) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *HeaderArray) GetValueArr() []*HeaderArrayValue {
	if m != nil {
		return m.ValueArr
	}
	return nil
}

//
//HeaderArray consists of keys and values
type HeaderArrayValue struct {
	Value                string   `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeaderArrayValue) Reset()         { *m = HeaderArrayValue{} }
func (m *HeaderArrayValue) String() string { return proto.CompactTextString(m) }
func (*HeaderArrayValue) ProtoMessage()    {}
func (*HeaderArrayValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_6af6f45688fe9b43, []int{3}
}

func (m *HeaderArrayValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeaderArrayValue.Unmarshal(m, b)
}
func (m *HeaderArrayValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeaderArrayValue.Marshal(b, m, deterministic)
}
func (m *HeaderArrayValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeaderArrayValue.Merge(m, src)
}
func (m *HeaderArrayValue) XXX_Size() int {
	return xxx_messageInfo_HeaderArrayValue.Size(m)
}
func (m *HeaderArrayValue) XXX_DiscardUnknown() {
	xxx_messageInfo_HeaderArrayValue.DiscardUnknown(m)
}

var xxx_messageInfo_HeaderArrayValue proto.InternalMessageInfo

func (m *HeaderArrayValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

//
//ErrorCase will be sent if there is a Taskerror in a CrawlerTaskRequest. no body will be sent in this case.
type ErrorCase struct {
	TaskId               uint64   `protobuf:"varint,1,opt,name=TaskId,proto3" json:"TaskId,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
	TaskError            string   `protobuf:"bytes,3,opt,name=TaskError,proto3" json:"TaskError,omitempty"`
	ResponseTime         int64    `protobuf:"varint,4,opt,name=ResponseTime,proto3" json:"ResponseTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ErrorCase) Reset()         { *m = ErrorCase{} }
func (m *ErrorCase) String() string { return proto.CompactTextString(m) }
func (*ErrorCase) ProtoMessage()    {}
func (*ErrorCase) Descriptor() ([]byte, []int) {
	return fileDescriptor_6af6f45688fe9b43, []int{4}
}

func (m *ErrorCase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorCase.Unmarshal(m, b)
}
func (m *ErrorCase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorCase.Marshal(b, m, deterministic)
}
func (m *ErrorCase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorCase.Merge(m, src)
}
func (m *ErrorCase) XXX_Size() int {
	return xxx_messageInfo_ErrorCase.Size(m)
}
func (m *ErrorCase) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorCase.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorCase proto.InternalMessageInfo

func (m *ErrorCase) GetTaskId() uint64 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

func (m *ErrorCase) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ErrorCase) GetTaskError() string {
	if m != nil {
		return m.TaskError
	}
	return ""
}

func (m *ErrorCase) GetResponseTime() int64 {
	if m != nil {
		return m.ResponseTime
	}
	return 0
}

//
//UploadStatus is the response from the receiver.
type UploadStatus struct {
	Code                 UploadStatusCode `protobuf:"varint,2,opt,name=Code,proto3,enum=crawlerproto.UploadStatusCode" json:"Code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UploadStatus) Reset()         { *m = UploadStatus{} }
func (m *UploadStatus) String() string { return proto.CompactTextString(m) }
func (*UploadStatus) ProtoMessage()    {}
func (*UploadStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_6af6f45688fe9b43, []int{5}
}

func (m *UploadStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadStatus.Unmarshal(m, b)
}
func (m *UploadStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadStatus.Marshal(b, m, deterministic)
}
func (m *UploadStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadStatus.Merge(m, src)
}
func (m *UploadStatus) XXX_Size() int {
	return xxx_messageInfo_UploadStatus.Size(m)
}
func (m *UploadStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadStatus.DiscardUnknown(m)
}

var xxx_messageInfo_UploadStatus proto.InternalMessageInfo

func (m *UploadStatus) GetCode() UploadStatusCode {
	if m != nil {
		return m.Code
	}
	return UploadStatusCode_Ok
}

func init() {
	proto.RegisterEnum("crawlerproto.UploadStatusCode", UploadStatusCode_name, UploadStatusCode_value)
	proto.RegisterType((*Chunk)(nil), "crawlerproto.Chunk")
	proto.RegisterType((*Infos)(nil), "crawlerproto.Infos")
	proto.RegisterType((*HeaderArray)(nil), "crawlerproto.HeaderArray")
	proto.RegisterType((*HeaderArrayValue)(nil), "crawlerproto.HeaderArrayValue")
	proto.RegisterType((*ErrorCase)(nil), "crawlerproto.ErrorCase")
	proto.RegisterType((*UploadStatus)(nil), "crawlerproto.UploadStatus")
}

func init() {
	proto.RegisterFile("crawlerToAnalyserFileTransfer.proto", fileDescriptor_6af6f45688fe9b43)
}

var fileDescriptor_6af6f45688fe9b43 = []byte{
	// 416 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x52, 0x4d, 0xab, 0xd3, 0x40,
	0x14, 0x7d, 0xf3, 0xf2, 0xa1, 0xb9, 0x0d, 0x1a, 0x46, 0xd1, 0xf8, 0x90, 0x47, 0x89, 0x20, 0xc1,
	0x45, 0xd1, 0xba, 0xd2, 0x8d, 0xd4, 0x68, 0xb1, 0x28, 0x08, 0xd3, 0xe8, 0xc6, 0xd5, 0x68, 0x6e,
	0xb1, 0x34, 0xce, 0x94, 0x99, 0x14, 0xe9, 0xca, 0xbf, 0xe4, 0x1f, 0xf2, 0xbf, 0x98, 0x99, 0xa4,
	0x6d, 0x1a, 0x2d, 0xca, 0xdb, 0xe5, 0x9e, 0x73, 0xee, 0xb9, 0x37, 0x67, 0x2e, 0x3c, 0xf8, 0xa2,
	0xf8, 0xf7, 0x12, 0x55, 0x2e, 0x27, 0x82, 0x97, 0x5b, 0x8d, 0x6a, 0xba, 0x2c, 0x31, 0x57, 0x5c,
	0xe8, 0x05, 0xaa, 0xd1, 0x5a, 0xc9, 0x4a, 0xd2, 0xb0, 0x15, 0xd9, 0x2a, 0x79, 0x06, 0x5e, 0xf6,
	0x75, 0x23, 0x56, 0x34, 0x86, 0x6b, 0x99, 0x14, 0x15, 0x8a, 0x2a, 0x26, 0x43, 0x92, 0x86, 0x6c,
	0x57, 0xd2, 0x3b, 0xe0, 0xe7, 0x5c, 0xaf, 0x66, 0x45, 0x7c, 0x5e, 0x13, 0x2e, 0x6b, 0xab, 0xe4,
	0x27, 0x01, 0x6f, 0x26, 0x16, 0x52, 0x77, 0x14, 0xa4, 0xab, 0x30, 0x9e, 0x93, 0xa2, 0x50, 0xa8,
	0xb5, 0x6d, 0x0d, 0xd8, 0xae, 0xa4, 0x4f, 0xc0, 0x7f, 0x83, 0xbc, 0x40, 0x15, 0x3b, 0x43, 0x27,
	0x1d, 0x8c, 0xef, 0x8d, 0xba, 0x5b, 0x8d, 0x1a, 0x6e, 0xa2, 0x14, 0xdf, 0xb2, 0x56, 0x48, 0x2f,
	0x01, 0xe6, 0x15, 0xaf, 0x36, 0x3a, 0x93, 0x05, 0xc6, 0x6e, 0xed, 0xe7, 0xb1, 0x0e, 0x42, 0x13,
	0x08, 0x19, 0xea, 0xb5, 0x14, 0x1a, 0xf3, 0xe5, 0x37, 0x8c, 0xbd, 0x5a, 0xe1, 0xb0, 0x23, 0x2c,
	0xf9, 0x04, 0x83, 0x8e, 0x35, 0x8d, 0xc0, 0x79, 0x8b, 0x5b, 0xbb, 0x74, 0xc0, 0xcc, 0x27, 0x7d,
	0x0e, 0xd7, 0x3f, 0xf2, 0x72, 0x83, 0x35, 0x5f, 0xaf, 0x6c, 0x36, 0xbb, 0x3c, 0xb9, 0x99, 0x15,
	0xb2, 0xbd, 0x3e, 0x49, 0x21, 0xea, 0xb3, 0xf4, 0x36, 0x78, 0xf6, 0xa3, 0x9d, 0xd1, 0x14, 0xc9,
	0x0f, 0x08, 0x5e, 0x2b, 0x25, 0x55, 0xc6, 0x35, 0x5e, 0x21, 0xbc, 0xfb, 0x10, 0x18, 0x8d, 0xb5,
	0xa8, 0xf3, 0x33, 0xdc, 0x01, 0xf8, 0x23, 0x07, 0xf7, 0x2f, 0x39, 0xbc, 0x84, 0xf0, 0xc3, 0xba,
	0x94, 0xbc, 0x68, 0xf2, 0xa3, 0x63, 0x70, 0x6d, 0xaa, 0x66, 0xd0, 0x8d, 0xfe, 0x2f, 0x77, 0x95,
	0x46, 0xc5, 0xac, 0xf6, 0xd1, 0x43, 0x88, 0xfa, 0x0c, 0xf5, 0xe1, 0xfc, 0xfd, 0x2a, 0x3a, 0xa3,
	0x00, 0xfe, 0x94, 0xd7, 0xa7, 0x57, 0x44, 0x64, 0xfc, 0x8b, 0x80, 0x3f, 0x47, 0x61, 0x9e, 0xf0,
	0x05, 0xf8, 0x4d, 0x0b, 0xbd, 0x75, 0x3c, 0xc2, 0x9e, 0xe0, 0xc5, 0xc5, 0xe9, 0xb9, 0xc9, 0x59,
	0x4a, 0x1e, 0x13, 0xfa, 0x0a, 0x06, 0x0d, 0xda, 0xdc, 0x5d, 0xcf, 0xc5, 0x82, 0xff, 0xe1, 0xf2,
	0x0e, 0x6e, 0x36, 0xe8, 0xe1, 0x11, 0xee, 0x1e, 0x37, 0xed, 0x89, 0x7f, 0xbb, 0x7d, 0xf6, 0x2d,
	0xf3, 0xf4, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd3, 0xf1, 0xaa, 0x4f, 0x7d, 0x03, 0x00, 0x00,
}
